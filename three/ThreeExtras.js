// ThreeExtras.js r32 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,c,d){this.r=a;this.g=c;this.b=d;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHSV:function(a,c,d){var e,f,b,l,h,g;if(d==0)e=f=b=0;else{l=Math.floor(a*6);h=a*6-l;a=d*(1-c);g=d*(1-c*h);c=d*(1-c*(1-h));switch(l){case 1:e=g;f=d;b=a;break;case 2:e=a;f=d;b=c;break;case 3:e=a;f=g;b=d;break;case 4:e=c;f=a;b=d;break;case 5:e=d;f=a;b=g;break;case 6:case 0:e=d;f=c;b=a}}this.r=e;this.g=f;this.b=b;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},
setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+
this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,c){this.x=a||0;this.y=c||0};
THREE.Vector2.prototype={set:function(a,c){this.x=a;this.y=c;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,c,d){this.x=a||0;this.y=c||0;this.z=d||0};
THREE.Vector3.prototype={set:function(a,c,d){this.x=a;this.y=c;this.z=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,c){this.x=a.y*c.z-a.z*c.y;this.y=a.z*c.x-a.x*c.z;this.z=a.x*c.y-a.y*c.x;return this},crossSelf:function(a){var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},multiply:function(a,c){this.x=a.x*c.x;this.y=a.y*c.y;this.z=a.z*c.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=
a.z;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var c=this.x-a.x,d=this.y-a.y;a=this.z-a.z;return Math.sqrt(c*c+d*d+a*a)},distanceToSquared:function(a){var c=this.x-a.x,d=this.y-a.y;a=this.z-a.z;return c*c+d*d+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=
-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,c,d,e){this.x=a||0;this.y=c||0;this.z=d||0;this.w=e||1};
THREE.Vector4.prototype={set:function(a,c,d,e){this.x=a;this.y=c;this.z=d;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;this.w=a.w+c.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;this.w=a.w-c.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,c){this.x+=(a.x-this.x)*c;this.y+=(a.y-this.y)*c;this.z+=(a.z-this.z)*c;this.w+=(a.w-this.w)*c},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,c){this.origin=a||new THREE.Vector3;this.direction=c||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var c,d,e=a.objects,f=[];a=0;for(c=e.length;a<c;a++){d=e[a];if(d instanceof THREE.Mesh)f=f.concat(this.intersectObject(d))}f.sort(function(b,l){return b.distance-l.distance});return f},intersectObject:function(a){function c(G,u,H,n){n=n.clone().subSelf(u);H=H.clone().subSelf(u);var k=G.clone().subSelf(u);G=n.dot(n);u=n.dot(H);n=n.dot(k);var o=H.dot(H);H=H.dot(k);k=1/(G*o-u*u);o=(o*n-u*H)*k;G=(G*H-u*n)*k;return o>0&&G>0&&o+G<1}var d,e,f,b,l,h,g,m,y,C,
w,p=a.geometry,z=p.vertices,F=[];d=0;for(e=p.faces.length;d<e;d++){f=p.faces[d];C=this.origin.clone();w=this.direction.clone();b=a.matrix.multiplyVector3(z[f.a].position.clone());l=a.matrix.multiplyVector3(z[f.b].position.clone());h=a.matrix.multiplyVector3(z[f.c].position.clone());g=f instanceof THREE.Face4?a.matrix.multiplyVector3(z[f.d].position.clone()):null;m=a.rotationMatrix.multiplyVector3(f.normal.clone());y=w.dot(m);if(y<0){m=m.dot((new THREE.Vector3).sub(b,C))/y;C=C.addSelf(w.multiplyScalar(m));
if(f instanceof THREE.Face3){if(c(C,b,l,h)){f={distance:this.origin.distanceTo(C),point:C,face:f,object:a};F.push(f)}}else if(f instanceof THREE.Face4)if(c(C,b,l,g)||c(C,l,h,g)){f={distance:this.origin.distanceTo(C),point:C,face:f,object:a};F.push(f)}}}return F}};
THREE.Rectangle=function(){function a(){b=e-c;l=f-d}var c,d,e,f,b,l,h=true;this.getX=function(){return c};this.getY=function(){return d};this.getWidth=function(){return b};this.getHeight=function(){return l};this.getLeft=function(){return c};this.getTop=function(){return d};this.getRight=function(){return e};this.getBottom=function(){return f};this.set=function(g,m,y,C){h=false;c=g;d=m;e=y;f=C;a()};this.addPoint=function(g,m){if(h){h=false;c=g;d=m;e=g;f=m}else{c=c<g?c:g;d=d<m?d:m;e=e>g?e:g;f=f>m?
f:m}a()};this.add3Points=function(g,m,y,C,w,p){if(h){h=false;c=g<y?g<w?g:w:y<w?y:w;d=m<C?m<p?m:p:C<p?C:p;e=g>y?g>w?g:w:y>w?y:w;f=m>C?m>p?m:p:C>p?C:p}else{c=g<y?g<w?g<c?g:c:w<c?w:c:y<w?y<c?y:c:w<c?w:c;d=m<C?m<p?m<d?m:d:p<d?p:d:C<p?C<d?C:d:p<d?p:d;e=g>y?g>w?g>e?g:e:w>e?w:e:y>w?y>e?y:e:w>e?w:e;f=m>C?m>p?m>f?m:f:p>f?p:f:C>p?C>f?C:f:p>f?p:f}a()};this.addRectangle=function(g){if(h){h=false;c=g.getLeft();d=g.getTop();e=g.getRight();f=g.getBottom()}else{c=c<g.getLeft()?c:g.getLeft();d=d<g.getTop()?d:g.getTop();
e=e>g.getRight()?e:g.getRight();f=f>g.getBottom()?f:g.getBottom()}a()};this.inflate=function(g){c-=g;d-=g;e+=g;f+=g;a()};this.minSelf=function(g){c=c>g.getLeft()?c:g.getLeft();d=d>g.getTop()?d:g.getTop();e=e<g.getRight()?e:g.getRight();f=f<g.getBottom()?f:g.getBottom();a()};this.instersects=function(g){return Math.min(e,g.getRight())-Math.max(c,g.getLeft())>=0&&Math.min(f,g.getBottom())-Math.max(d,g.getTop())>=0};this.empty=function(){h=true;f=e=d=c=0;a()};this.isEmpty=function(){return h};this.toString=
function(){return"THREE.Rectangle ( left: "+c+", right: "+e+", top: "+d+", bottom: "+f+", width: "+b+", height: "+l+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a,c=this.m;a=c[1];c[1]=c[3];c[3]=a;a=c[2];c[2]=c[6];c[6]=a;a=c[5];c[5]=c[7];c[7]=a;return this}};
THREE.Matrix4=function(a,c,d,e,f,b,l,h,g,m,y,C,w,p,z,F){this.n11=a||1;this.n12=c||0;this.n13=d||0;this.n14=e||0;this.n21=f||0;this.n22=b||1;this.n23=l||0;this.n24=h||0;this.n31=g||0;this.n32=m||0;this.n33=y||1;this.n34=C||0;this.n41=w||0;this.n42=p||0;this.n43=z||0;this.n44=F||1;this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,c,d,e,f,b,l,h,g,m,y,C,w,p,z,F){this.n11=a;this.n12=c;this.n13=d;this.n14=e;this.n21=f;this.n22=b;this.n23=l;this.n24=h;this.n31=g;this.n32=m;this.n33=y;this.n34=C;this.n41=w;this.n42=p;this.n43=z;this.n44=F;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,c,d){var e=THREE.Matrix4.__tmpVec1,f=THREE.Matrix4.__tmpVec2,b=THREE.Matrix4.__tmpVec3;b.sub(a,c).normalize();e.cross(d,b).normalize();f.cross(b,e).normalize();this.n11=e.x;this.n12=e.y;this.n13=e.z;this.n14=-e.dot(a);this.n21=f.x;this.n22=f.y;this.n23=f.z;this.n24=-f.dot(a);
this.n31=b.x;this.n32=b.y;this.n33=b.z;this.n34=-b.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var c=a.x,d=a.y,e=a.z,f=1/(this.n41*c+this.n42*d+this.n43*e+this.n44);a.x=(this.n11*c+this.n12*d+this.n13*e+this.n14)*f;a.y=(this.n21*c+this.n22*d+this.n23*e+this.n24)*f;a.z=(this.n31*c+this.n32*d+this.n33*e+this.n34)*f;return a},multiplyVector4:function(a){var c=a.x,d=a.y,e=a.z,f=a.w;a.x=this.n11*c+this.n12*d+this.n13*e+this.n14*f;a.y=this.n21*c+this.n22*d+this.n23*
e+this.n24*f;a.z=this.n31*c+this.n32*d+this.n33*e+this.n34*f;a.w=this.n41*c+this.n42*d+this.n43*e+this.n44*f;return a},crossVector:function(a){var c=new THREE.Vector4;c.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;c.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;c.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;c.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return c},multiply:function(a,c){var d=a.n11,e=a.n12,f=a.n13,b=a.n14,l=a.n21,h=a.n22,g=a.n23,m=a.n24,y=a.n31,
C=a.n32,w=a.n33,p=a.n34,z=a.n41,F=a.n42,G=a.n43,u=a.n44,H=c.n11,n=c.n12,k=c.n13,o=c.n14,q=c.n21,j=c.n22,v=c.n23,t=c.n24,x=c.n31,A=c.n32,D=c.n33,B=c.n34,I=c.n41,P=c.n42,O=c.n43,Q=c.n44;this.n11=d*H+e*q+f*x+b*I;this.n12=d*n+e*j+f*A+b*P;this.n13=d*k+e*v+f*D+b*O;this.n14=d*o+e*t+f*B+b*Q;this.n21=l*H+h*q+g*x+m*I;this.n22=l*n+h*j+g*A+m*P;this.n23=l*k+h*v+g*D+m*O;this.n24=l*o+h*t+g*B+m*Q;this.n31=y*H+C*q+w*x+p*I;this.n32=y*n+C*j+w*A+p*P;this.n33=y*k+C*v+w*D+p*O;this.n34=y*o+C*t+w*B+p*Q;this.n41=z*H+F*q+
G*x+u*I;this.n42=z*n+F*j+G*A+u*P;this.n43=z*k+F*v+G*D+u*O;this.n44=z*o+F*t+G*B+u*Q;return this},multiplySelf:function(a){var c=this.n11,d=this.n12,e=this.n13,f=this.n14,b=this.n21,l=this.n22,h=this.n23,g=this.n24,m=this.n31,y=this.n32,C=this.n33,w=this.n34,p=this.n41,z=this.n42,F=this.n43,G=this.n44,u=a.n11,H=a.n21,n=a.n31,k=a.n41,o=a.n12,q=a.n22,j=a.n32,v=a.n42,t=a.n13,x=a.n23,A=a.n33,D=a.n43,B=a.n14,I=a.n24,P=a.n34;a=a.n44;this.n11=c*u+d*H+e*n+f*k;this.n12=c*o+d*q+e*j+f*v;this.n13=c*t+d*x+e*A+f*
D;this.n14=c*B+d*I+e*P+f*a;this.n21=b*u+l*H+h*n+g*k;this.n22=b*o+l*q+h*j+g*v;this.n23=b*t+l*x+h*A+g*D;this.n24=b*B+l*I+h*P+g*a;this.n31=m*u+y*H+C*n+w*k;this.n32=m*o+y*q+C*j+w*v;this.n33=m*t+y*x+C*A+w*D;this.n34=m*B+y*I+C*P+w*a;this.n41=p*u+z*H+F*n+G*k;this.n42=p*o+z*q+F*j+G*v;this.n43=p*t+z*x+F*A+G*D;this.n44=p*B+z*I+F*P+G*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=
a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){var a=this.n11,c=this.n12,d=this.n13,e=this.n14,f=this.n21,b=this.n22,l=this.n23,h=this.n24,g=this.n31,m=this.n32,y=this.n33,C=this.n34,w=this.n41,p=this.n42,z=this.n43,F=this.n44;return e*l*m*w-d*h*m*w-e*b*y*w+c*h*y*w+d*b*C*w-c*l*C*w-e*l*g*p+d*h*g*p+e*f*y*p-a*h*y*p-d*f*C*p+a*l*C*p+e*b*g*z-c*h*g*z-e*f*m*z+a*h*m*z+c*f*C*z-a*b*C*z-d*b*g*F+c*l*g*F+d*f*m*F-a*l*m*F-c*f*y*F+a*b*y*F},transpose:function(){function a(c,d,
e){var f=c[d];c[d]=c[e];c[e]=f}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){var a=this.flat;a[0]=this.n11;
a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},setTranslation:function(a,c,d){this.set(1,0,0,a,0,1,0,c,0,0,1,d,0,0,0,1);return this},setScale:function(a,c,d){this.set(a,0,0,0,0,c,0,0,0,0,d,0,0,0,0,1);return this},setRotX:function(a){var c=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,c,-a,0,0,a,c,0,0,0,0,1);return this},setRotY:function(a){var c=
Math.cos(a);a=Math.sin(a);this.set(c,0,a,0,0,1,0,0,-a,0,c,0,0,0,0,1);return this},setRotZ:function(a){var c=Math.cos(a);a=Math.sin(a);this.set(c,-a,0,0,a,c,0,0,0,0,1,0,0,0,0,1);return this},setRotAxis:function(a,c){var d=Math.cos(c),e=Math.sin(c),f=1-d,b=a.x,l=a.y,h=a.z,g=f*b,m=f*l;this.set(g*b+d,g*l-e*h,g*h+e*l,0,g*l+e*h,m*l+d,m*h-e*b,0,g*h-e*l,m*h+e*b,f*h*h+d,0,0,0,0,1);return this},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+
this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,c,d){var e=new THREE.Matrix4;e.setTranslation(a,c,d);return e};THREE.Matrix4.scaleMatrix=function(a,c,d){var e=new THREE.Matrix4;e.setScale(a,c,d);return e};THREE.Matrix4.rotationXMatrix=function(a){var c=new THREE.Matrix4;c.setRotX(a);return c};
THREE.Matrix4.rotationYMatrix=function(a){var c=new THREE.Matrix4;c.setRotY(a);return c};THREE.Matrix4.rotationZMatrix=function(a){var c=new THREE.Matrix4;c.setRotZ(a);return c};THREE.Matrix4.rotationAxisAngleMatrix=function(a,c){var d=new THREE.Matrix4;d.setRotAxis(a,c);return d};
THREE.Matrix4.makeInvert=function(a){var c=a.n11,d=a.n12,e=a.n13,f=a.n14,b=a.n21,l=a.n22,h=a.n23,g=a.n24,m=a.n31,y=a.n32,C=a.n33,w=a.n34,p=a.n41,z=a.n42,F=a.n43,G=a.n44,u=new THREE.Matrix4;u.n11=h*w*z-g*C*z+g*y*F-l*w*F-h*y*G+l*C*G;u.n12=f*C*z-e*w*z-f*y*F+d*w*F+e*y*G-d*C*G;u.n13=e*g*z-f*h*z+f*l*F-d*g*F-e*l*G+d*h*G;u.n14=f*h*y-e*g*y-f*l*C+d*g*C+e*l*w-d*h*w;u.n21=g*C*p-h*w*p-g*m*F+b*w*F+h*m*G-b*C*G;u.n22=e*w*p-f*C*p+f*m*F-c*w*F-e*m*G+c*C*G;u.n23=f*h*p-e*g*p-f*b*F+c*g*F+e*b*G-c*h*G;u.n24=e*g*m-f*h*m+
f*b*C-c*g*C-e*b*w+c*h*w;u.n31=l*w*p-g*y*p+g*m*z-b*w*z-l*m*G+b*y*G;u.n32=f*y*p-d*w*p-f*m*z+c*w*z+d*m*G-c*y*G;u.n33=e*g*p-f*l*p+f*b*z-c*g*z-d*b*G+c*l*G;u.n34=f*l*m-d*g*m-f*b*y+c*g*y+d*b*w-c*l*w;u.n41=h*y*p-l*C*p-h*m*z+b*C*z+l*m*F-b*y*F;u.n42=d*C*p-e*y*p+e*m*z-c*C*z-d*m*F+c*y*F;u.n43=e*l*p-d*h*p-e*b*z+c*h*z+d*b*F-c*l*F;u.n44=d*h*m-e*l*m+e*b*y-c*h*y-d*b*C+c*l*C;u.multiplyScalar(1/a.determinant());return u};
THREE.Matrix4.makeInvert3x3=function(a){var c=a.flatten();a=a.m33;var d=a.m,e=c[10]*c[5]-c[6]*c[9],f=-c[10]*c[1]+c[2]*c[9],b=c[6]*c[1]-c[2]*c[5],l=-c[10]*c[4]+c[6]*c[8],h=c[10]*c[0]-c[2]*c[8],g=-c[6]*c[0]+c[2]*c[4],m=c[9]*c[4]-c[5]*c[8],y=-c[9]*c[0]+c[1]*c[8],C=c[5]*c[0]-c[1]*c[4];c=c[0]*e+c[1]*l+c[2]*m;if(c==0)throw"matrix not invertible";c=1/c;d[0]=c*e;d[1]=c*f;d[2]=c*b;d[3]=c*l;d[4]=c*h;d[5]=c*g;d[6]=c*m;d[7]=c*y;d[8]=c*C;return a};
THREE.Matrix4.makeFrustum=function(a,c,d,e,f,b){var l,h,g;l=new THREE.Matrix4;h=2*f/(c-a);g=2*f/(e-d);a=(c+a)/(c-a);d=(e+d)/(e-d);e=-(b+f)/(b-f);f=-2*b*f/(b-f);l.n11=h;l.n12=0;l.n13=a;l.n14=0;l.n21=0;l.n22=g;l.n23=d;l.n24=0;l.n31=0;l.n32=0;l.n33=e;l.n34=f;l.n41=0;l.n42=0;l.n43=-1;l.n44=0;return l};THREE.Matrix4.makePerspective=function(a,c,d,e){var f;a=d*Math.tan(a*Math.PI/360);f=-a;return THREE.Matrix4.makeFrustum(f*c,a*c,f,a,d,e)};
THREE.Matrix4.makeOrtho=function(a,c,d,e,f,b){var l,h,g,m;l=new THREE.Matrix4;h=c-a;g=d-e;m=b-f;a=(c+a)/h;d=(d+e)/g;f=(b+f)/m;l.n11=2/h;l.n12=0;l.n13=0;l.n14=-a;l.n21=0;l.n22=2/g;l.n23=0;l.n24=-d;l.n31=0;l.n32=0;l.n33=-2/m;l.n34=-f;l.n41=0;l.n42=0;l.n43=0;l.n44=1;return l};THREE.Matrix4.__tmpVec1=new THREE.Vector3;THREE.Matrix4.__tmpVec2=new THREE.Vector3;THREE.Matrix4.__tmpVec3=new THREE.Vector3;
THREE.Vertex=function(a,c){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=c||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,c,d,e,f){this.a=a;this.b=c;this.c=d;this.centroid=new THREE.Vector3;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.materials=f instanceof Array?f:[f]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,c,d,e,f,b){this.a=a;this.b=c;this.c=d;this.d=e;this.centroid=new THREE.Vector3;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.materials=b instanceof Array?b:[b]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,c){this.u=a||0;this.v=c||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.uvs2=[];this.colors=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,c,d;a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];d.centroid.set(0,0,0);if(d instanceof THREE.Face3){d.centroid.addSelf(this.vertices[d.a].position);d.centroid.addSelf(this.vertices[d.b].position);d.centroid.addSelf(this.vertices[d.c].position);d.centroid.divideScalar(3)}else if(d instanceof THREE.Face4){d.centroid.addSelf(this.vertices[d.a].position);d.centroid.addSelf(this.vertices[d.b].position);d.centroid.addSelf(this.vertices[d.c].position);
d.centroid.addSelf(this.vertices[d.d].position);d.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var c,d,e,f,b,l,h=new THREE.Vector3,g=new THREE.Vector3;e=0;for(f=this.vertices.length;e<f;e++){b=this.vertices[e];b.normal.set(0,0,0)}e=0;for(f=this.faces.length;e<f;e++){b=this.faces[e];if(a&&b.vertexNormals.length){h.set(0,0,0);c=0;for(d=b.normal.length;c<d;c++)h.addSelf(b.vertexNormals[c]);h.divideScalar(3)}else{c=this.vertices[b.a];d=this.vertices[b.b];l=this.vertices[b.c];h.sub(l.position,
d.position);g.sub(c.position,d.position);h.crossSelf(g)}h.isZero()||h.normalize();b.normal.copy(h)}},computeVertexNormals:function(){var a,c,d,e;if(this.__tmpVertices==undefined){e=this.__tmpVertices=Array(this.vertices.length);a=0;for(c=this.vertices.length;a<c;a++)e[a]=new THREE.Vector3;a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];if(d instanceof THREE.Face3)d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(d instanceof THREE.Face4)d.vertexNormals=[new THREE.Vector3,
new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}}else{e=this.__tmpVertices;a=0;for(c=this.vertices.length;a<c;a++)e[a].set(0,0,0)}a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];if(d instanceof THREE.Face3){e[d.a].addSelf(d.normal);e[d.b].addSelf(d.normal);e[d.c].addSelf(d.normal)}else if(d instanceof THREE.Face4){e[d.a].addSelf(d.normal);e[d.b].addSelf(d.normal);e[d.c].addSelf(d.normal);e[d.d].addSelf(d.normal)}}a=0;for(c=this.vertices.length;a<c;a++)e[a].normalize();a=0;for(c=this.faces.length;a<
c;a++){d=this.faces[a];if(d instanceof THREE.Face3){d.vertexNormals[0].copy(e[d.a]);d.vertexNormals[1].copy(e[d.b]);d.vertexNormals[2].copy(e[d.c])}else if(d instanceof THREE.Face4){d.vertexNormals[0].copy(e[d.a]);d.vertexNormals[1].copy(e[d.b]);d.vertexNormals[2].copy(e[d.c]);d.vertexNormals[3].copy(e[d.d])}}},computeTangents:function(){function a(B,I,P,O,Q,T,U){b=B.vertices[I].position;l=B.vertices[P].position;h=B.vertices[O].position;g=f[Q];m=f[T];y=f[U];C=l.x-b.x;w=h.x-b.x;p=l.y-b.y;z=h.y-b.y;
F=l.z-b.z;G=h.z-b.z;u=m.u-g.u;H=y.u-g.u;n=m.v-g.v;k=y.v-g.v;o=1/(u*k-H*n);v.set((k*C-n*w)*o,(k*p-n*z)*o,(k*F-n*G)*o);t.set((u*w-H*C)*o,(u*z-H*p)*o,(u*G-H*F)*o);q[I].addSelf(v);q[P].addSelf(v);q[O].addSelf(v);j[I].addSelf(t);j[P].addSelf(t);j[O].addSelf(t)}var c,d,e,f,b,l,h,g,m,y,C,w,p,z,F,G,u,H,n,k,o,q=[],j=[],v=new THREE.Vector3,t=new THREE.Vector3,x=new THREE.Vector3,A=new THREE.Vector3,D=new THREE.Vector3;c=0;for(d=this.vertices.length;c<d;c++){q[c]=new THREE.Vector3;j[c]=new THREE.Vector3}c=0;
for(d=this.faces.length;c<d;c++){e=this.faces[c];f=this.uvs[c];if(e instanceof THREE.Face3){a(this,e.a,e.b,e.c,0,1,2);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);this.vertices[e.c].normal.copy(e.vertexNormals[2])}else if(e instanceof THREE.Face4){a(this,e.a,e.b,e.c,0,1,2);a(this,e.a,e.b,e.d,0,1,3);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);this.vertices[e.c].normal.copy(e.vertexNormals[2]);
this.vertices[e.d].normal.copy(e.vertexNormals[3])}}c=0;for(d=this.vertices.length;c<d;c++){D.copy(this.vertices[c].normal);e=q[c];x.copy(e);x.subSelf(D.multiplyScalar(D.dot(e))).normalize();A.cross(this.vertices[c].normal,e);e=A.dot(j[c]);e=e<0?-1:1;this.vertices[c].tangent.set(x.x,x.y,x.z,e)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],
z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var c=1,d=this.vertices.length;c<d;c++){a=this.vertices[c];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>
this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,c=0,d=this.vertices.length;c<d;c++)a=Math.max(a,this.vertices[c].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(y){var C=[];c=0;for(d=y.length;c<d;c++)y[c]==undefined?C.push("undefined"):C.push(y[c].toString());return C.join("_")}var c,d,e,f,b,l,h,g,m={};e=0;for(f=this.faces.length;e<f;e++){b=this.faces[e];
l=b.materials;h=a(l);if(m[h]==undefined)m[h]={hash:h,counter:0};g=m[h].hash+"_"+m[h].counter;if(this.geometryChunks[g]==undefined)this.geometryChunks[g]={faces:[],materials:l,vertices:0};b=b instanceof THREE.Face3?3:4;if(this.geometryChunks[g].vertices+b>65535){m[h].counter+=1;g=m[h].hash+"_"+m[h].counter;if(this.geometryChunks[g]==undefined)this.geometryChunks[g]={faces:[],materials:l,vertices:0}}this.geometryChunks[g].faces.push(e);this.geometryChunks[g].vertices+=b}},toString:function(){return"THREE.Geometry ( vertices: "+
this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,c,d,e){this.fov=a;this.aspect=c;this.near=d;this.far=e;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.autoUpdateMatrix=true;this.projectionMatrix=null;this.matrix=new THREE.Matrix4;this.up=new THREE.Vector3(0,1,0);this.tmpVec=new THREE.Vector3;this.translateX=function(f){this.tmpVec.sub(this.target.position,this.position).normalize().multiplyScalar(f);this.tmpVec.crossSelf(this.up);this.position.addSelf(this.tmpVec);this.target.position.addSelf(this.tmpVec)};
this.translateZ=function(f){this.tmpVec.sub(this.target.position,this.position).normalize().multiplyScalar(f);this.position.subSelf(this.tmpVec);this.target.position.subSelf(this.tmpVec)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix()};
THREE.Camera.prototype={toString:function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=c||1};THREE.DirectionalLight.prototype=new THREE.Light;
THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=c||1};THREE.PointLight.prototype=new THREE.Light;THREE.PointLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.tmpMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true};
THREE.Object3D.prototype={updateMatrix:function(){var a=this.position,c=this.rotation,d=this.scale,e=this.tmpMatrix;this.matrix.setTranslation(a.x,a.y,a.z);this.rotationMatrix.setRotX(c.x);if(c.y!=0){e.setRotY(c.y);this.rotationMatrix.multiplySelf(e)}if(c.z!=0){e.setRotZ(c.z);this.rotationMatrix.multiplySelf(e)}this.matrix.multiplySelf(this.rotationMatrix);if(d.x!=0||d.y!=0||d.z!=0){e.setScale(d.x,d.y,d.z);this.matrix.multiplySelf(e)}}};THREE.Object3DCounter={value:0};
THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.sortParticles=false};THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;
THREE.Line=function(a,c,d){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.type=d!=undefined?d:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;THREE.Mesh=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};
THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;THREE.BillboardBlending=3;
THREE.LineBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.linewidth=1;this.linejoin=this.linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.linewidth!==undefined)this.linewidth=a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>)"}};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.light_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==
undefined)this.map=a.map;if(a.light_map!==undefined)this.light_map=a.light_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==
undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>light_map: "+this.light_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.light_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);
if(a.map!==undefined)this.map=a.map;if(a.light_map!==undefined)this.light_map=a.light_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;
if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.env_map=this.light_map=this.specular_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=
1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.light_map!==undefined)this.light_map=a.light_map;if(a.map!==undefined)this.map=a.map;if(a.specular_map!==undefined)this.specular_map=a.specular_map;if(a.env_map!==undefined)this.env_map=a.env_map;
if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;
if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>map: "+this.map+"<br/>specular_map: "+this.specular_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>wireframe: "+
this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial"}};
THREE.MeshNormalMaterial=function(a){this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial"}};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=a.vertex_shader;if(a.uniforms!==
undefined)this.uniforms=a.uniforms;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.map=null;this.size=this.opacity=1;this.vertex_colors=false;this.blending=THREE.NormalBlending;this.offset=new THREE.Vector2;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=a.map;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.size!==undefined)this.size=a.size;if(a.blending!==undefined)this.blending=a.blending;if(a.vertex_colors!==undefined)this.vertex_colors=a.vertex_colors}};
THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>opacity: "+this.opacity+"<br/>size: "+this.size+"<br/>blending: "+this.blending+"<br/>vertex_colors: "+this.vertex_colors+"<br/>)"}};
THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};
THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};THREE.Texture=function(a,c,d,e,f,b){this.image=a;this.mapping=c!==undefined?c:new THREE.UVMapping;this.wrap_s=d!==undefined?d:THREE.ClampToEdgeWrapping;this.wrap_t=e!==undefined?e:THREE.ClampToEdgeWrapping;this.mag_filter=f!==undefined?f:THREE.LinearFilter;this.min_filter=b!==undefined?b:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;
THREE.RenderTarget=function(a,c,d){this.width=a;this.height=c;d=d||{};this.wrap_s=d.wrap_s!==undefined?d.wrap_s:THREE.ClampToEdgeWrapping;this.wrap_t=d.wrap_t!==undefined?d.wrap_t:THREE.ClampToEdgeWrapping;this.mag_filter=d.mag_filter!==undefined?d.mag_filter:THREE.LinearFilter;this.min_filter=d.min_filter!==undefined?d.min_filter:THREE.LinearMipMapLinearFilter;this.format=d.format!==undefined?d.format:THREE.RGBFormat;this.type=d.type!==undefined?d.type:THREE.UnsignedByteType};
var Uniforms={clone:function(a){var c,d,e,f={};for(c in a){f[c]={};for(d in a[c]){e=a[c][d];f[c][d]=e instanceof THREE.Color||e instanceof THREE.Vector3||e instanceof THREE.Texture?e.clone():e}}return f},merge:function(a){var c,d,e,f={};for(c=0;c<a.length;c++){e=this.clone(a[c]);for(d in e)f[d]=e[d]}return f}};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,c,d){this.color=new THREE.Color(a);this.near=c||1;this.far=d||1E3};THREE.FogExp2=function(a,c){this.color=new THREE.Color(a);this.density=c||2.5E-4};
THREE.Projector=function(){function a(j,v){return v.z-j.z}function c(j,v){var t=0,x=1,A=j.z+j.w,D=v.z+v.w,B=-j.z+j.w,I=-v.z+v.w;if(A>=0&&D>=0&&B>=0&&I>=0)return true;else if(A<0&&D<0||B<0&&I<0)return false;else{if(A<0)t=Math.max(t,A/(A-D));else if(D<0)x=Math.min(x,A/(A-D));if(B<0)t=Math.max(t,B/(B-I));else if(I<0)x=Math.min(x,B/(B-I));if(x<t)return false;else{j.lerpSelf(v,t);v.lerpSelf(j,1-x);return true}}}var d,e,f=[],b,l,h,g=[],m,y,C=[],w,p,z=[],F=new THREE.Vector4,G=new THREE.Vector4,u=new THREE.Matrix4,
H=new THREE.Matrix4,n=[],k=new THREE.Vector4,o=new THREE.Vector4,q;this.projectObjects=function(j,v,t){var x=[],A,D;e=0;u.multiply(v.projectionMatrix,v.matrix);n[0]=new THREE.Vector4(u.n41-u.n11,u.n42-u.n12,u.n43-u.n13,u.n44-u.n14);n[1]=new THREE.Vector4(u.n41+u.n11,u.n42+u.n12,u.n43+u.n13,u.n44+u.n14);n[2]=new THREE.Vector4(u.n41+u.n21,u.n42+u.n22,u.n43+u.n23,u.n44+u.n24);n[3]=new THREE.Vector4(u.n41-u.n21,u.n42-u.n22,u.n43-u.n23,u.n44-u.n24);n[4]=new THREE.Vector4(u.n41-u.n31,u.n42-u.n32,u.n43-
u.n33,u.n44-u.n34);n[5]=new THREE.Vector4(u.n41+u.n31,u.n42+u.n32,u.n43+u.n33,u.n44+u.n34);v=0;for(A=n.length;v<A;v++){D=n[v];D.divideScalar(Math.sqrt(D.x*D.x+D.y*D.y+D.z*D.z))}A=j.objects;j=0;for(v=A.length;j<v;j++){D=A[j];var B;if(!(B=!D.visible)){if(B=D instanceof THREE.Mesh){a:{B=void 0;for(var I=D.position,P=-D.geometry.boundingSphere.radius*Math.max(D.scale.x,Math.max(D.scale.y,D.scale.z)),O=0;O<6;O++){B=n[O].x*I.x+n[O].y*I.y+n[O].z*I.z+n[O].w;if(B<=P){B=false;break a}}B=true}B=!B}B=B}if(!B){d=
f[e]=f[e]||new THREE.RenderableObject;F.copy(D.position);u.multiplyVector3(F);d.object=D;d.z=F.z;x.push(d);e++}}t&&x.sort(a);return x};this.projectScene=function(j,v,t){var x=[],A=v.near,D=v.far,B,I,P,O,Q,T,U,ba,ca,S,K,Z,V,N,W,$;h=y=p=0;v.autoUpdateMatrix&&v.updateMatrix();u.multiply(v.projectionMatrix,v.matrix);T=this.projectObjects(j,v,true);j=0;for(B=T.length;j<B;j++){U=T[j].object;if(U.visible){U.autoUpdateMatrix&&U.updateMatrix();ba=U.matrix;ca=U.rotationMatrix;S=U.materials;K=U.overdraw;if(U instanceof
THREE.Mesh){Z=U.geometry;V=Z.vertices;I=0;for(P=V.length;I<P;I++){N=V[I];N.positionWorld.copy(N.position);ba.multiplyVector3(N.positionWorld);O=N.positionScreen;O.copy(N.positionWorld);u.multiplyVector4(O);O.x/=O.w;O.y/=O.w;N.__visible=O.z>A&&O.z<D}Z=Z.faces;I=0;for(P=Z.length;I<P;I++){N=Z[I];if(N instanceof THREE.Face3){O=V[N.a];Q=V[N.b];W=V[N.c];if(O.__visible&&Q.__visible&&W.__visible)if(U.doubleSided||U.flipSided!=(W.positionScreen.x-O.positionScreen.x)*(Q.positionScreen.y-O.positionScreen.y)-
(W.positionScreen.y-O.positionScreen.y)*(Q.positionScreen.x-O.positionScreen.x)<0){b=g[h]=g[h]||new THREE.RenderableFace3;b.v1.positionWorld.copy(O.positionWorld);b.v2.positionWorld.copy(Q.positionWorld);b.v3.positionWorld.copy(W.positionWorld);b.v1.positionScreen.copy(O.positionScreen);b.v2.positionScreen.copy(Q.positionScreen);b.v3.positionScreen.copy(W.positionScreen);b.normalWorld.copy(N.normal);ca.multiplyVector3(b.normalWorld);b.centroidWorld.copy(N.centroid);ba.multiplyVector3(b.centroidWorld);
b.centroidScreen.copy(b.centroidWorld);u.multiplyVector3(b.centroidScreen);W=N.vertexNormals;q=b.vertexNormalsWorld;O=0;for(Q=W.length;O<Q;O++){$=q[O]=q[O]||new THREE.Vector3;$.copy(W[O]);ca.multiplyVector3($)}b.z=b.centroidScreen.z;b.meshMaterials=S;b.faceMaterials=N.materials;b.overdraw=K;if(U.geometry.uvs[I]){b.uvs[0]=U.geometry.uvs[I][0];b.uvs[1]=U.geometry.uvs[I][1];b.uvs[2]=U.geometry.uvs[I][2]}x.push(b);h++}}else if(N instanceof THREE.Face4){O=V[N.a];Q=V[N.b];W=V[N.c];$=V[N.d];if(O.__visible&&
Q.__visible&&W.__visible&&$.__visible)if(U.doubleSided||U.flipSided!=(($.positionScreen.x-O.positionScreen.x)*(Q.positionScreen.y-O.positionScreen.y)-($.positionScreen.y-O.positionScreen.y)*(Q.positionScreen.x-O.positionScreen.x)<0||(Q.positionScreen.x-W.positionScreen.x)*($.positionScreen.y-W.positionScreen.y)-(Q.positionScreen.y-W.positionScreen.y)*($.positionScreen.x-W.positionScreen.x)<0)){b=g[h]=g[h]||new THREE.RenderableFace3;b.v1.positionWorld.copy(O.positionWorld);b.v2.positionWorld.copy(Q.positionWorld);
b.v3.positionWorld.copy($.positionWorld);b.v1.positionScreen.copy(O.positionScreen);b.v2.positionScreen.copy(Q.positionScreen);b.v3.positionScreen.copy($.positionScreen);b.normalWorld.copy(N.normal);ca.multiplyVector3(b.normalWorld);b.centroidWorld.copy(N.centroid);ba.multiplyVector3(b.centroidWorld);b.centroidScreen.copy(b.centroidWorld);u.multiplyVector3(b.centroidScreen);b.z=b.centroidScreen.z;b.meshMaterials=S;b.faceMaterials=N.materials;b.overdraw=K;if(U.geometry.uvs[I]){b.uvs[0]=U.geometry.uvs[I][0];
b.uvs[1]=U.geometry.uvs[I][1];b.uvs[2]=U.geometry.uvs[I][3]}x.push(b);h++;l=g[h]=g[h]||new THREE.RenderableFace3;l.v1.positionWorld.copy(Q.positionWorld);l.v2.positionWorld.copy(W.positionWorld);l.v3.positionWorld.copy($.positionWorld);l.v1.positionScreen.copy(Q.positionScreen);l.v2.positionScreen.copy(W.positionScreen);l.v3.positionScreen.copy($.positionScreen);l.normalWorld.copy(b.normalWorld);l.centroidWorld.copy(b.centroidWorld);l.centroidScreen.copy(b.centroidScreen);l.z=l.centroidScreen.z;l.meshMaterials=
S;l.faceMaterials=N.materials;l.overdraw=K;if(U.geometry.uvs[I]){l.uvs[0]=U.geometry.uvs[I][1];l.uvs[1]=U.geometry.uvs[I][2];l.uvs[2]=U.geometry.uvs[I][3]}x.push(l);h++}}}}else if(U instanceof THREE.Line){H.multiply(u,ba);V=U.geometry.vertices;N=V[0];N.positionScreen.copy(N.position);H.multiplyVector4(N.positionScreen);I=1;for(P=V.length;I<P;I++){O=V[I];O.positionScreen.copy(O.position);H.multiplyVector4(O.positionScreen);Q=V[I-1];k.copy(O.positionScreen);o.copy(Q.positionScreen);if(c(k,o)){k.multiplyScalar(1/
k.w);o.multiplyScalar(1/o.w);m=C[y]=C[y]||new THREE.RenderableLine;m.v1.positionScreen.copy(k);m.v2.positionScreen.copy(o);m.z=Math.max(k.z,o.z);m.materials=U.materials;x.push(m);y++}}}else if(U instanceof THREE.Particle){G.set(U.position.x,U.position.y,U.position.z,1);u.multiplyVector4(G);G.z/=G.w;if(G.z>0&&G.z<1){w=z[p]=z[p]||new THREE.RenderableParticle;w.x=G.x/G.w;w.y=G.y/G.w;w.z=G.z;w.rotation=U.rotation.z;w.scale.x=U.scale.x*Math.abs(w.x-(G.x+v.projectionMatrix.n11)/(G.w+v.projectionMatrix.n14));
w.scale.y=U.scale.y*Math.abs(w.y-(G.y+v.projectionMatrix.n22)/(G.w+v.projectionMatrix.n24));w.materials=U.materials;x.push(w);p++}}}}t&&x.sort(a);return x};this.unprojectVector=function(j,v){var t=THREE.Matrix4.makeInvert(v.matrix);t.multiplySelf(THREE.Matrix4.makeInvert(v.projectionMatrix));t.multiplyVector3(j);return j}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,c=new THREE.Projector,d,e,f,b;this.domElement=document.createElement("div");this.setSize=function(l,h){d=l;e=h;f=d/2;b=e/2};this.render=function(l,h){var g,m,y,C,w,p,z,F;a=c.projectScene(l,h);g=0;for(m=a.length;g<m;g++){w=a[g];if(w instanceof THREE.RenderableParticle){z=w.x*f+f;F=w.y*b+b;y=0;for(C=w.material.length;y<C;y++){p=w.material[y];if(p instanceof THREE.ParticleDOMMaterial){p=p.domElement;p.style.left=z+"px";p.style.top=F+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(ma){if(w!=ma)m.globalAlpha=w=ma}function c(ma){if(p!=ma){switch(ma){case THREE.NormalBlending:m.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:m.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:m.globalCompositeOperation="darker"}p=ma}}var d=null,e=new THREE.Projector,f=document.createElement("canvas"),b,l,h,g,m=f.getContext("2d"),y=new THREE.Color(0),C=0,w=1,p=0,z=null,F=null,G=1,u,H,n,k,o,q,j,v,t,x=new THREE.Color,
A=new THREE.Color,D=new THREE.Color,B=new THREE.Color,I=new THREE.Color,P,O,Q,T,U,ba,ca,S,K,Z=new THREE.Rectangle,V=new THREE.Rectangle,N=new THREE.Rectangle,W=false,$=new THREE.Color,da=new THREE.Color,ha=new THREE.Color,E=new THREE.Color,L=Math.PI*2,J=new THREE.Vector3,X,ea,ja,ia,qa,la,ua=16;X=document.createElement("canvas");X.width=X.height=2;ea=X.getContext("2d");ea.fillStyle="rgba(0,0,0,1)";ea.fillRect(0,0,2,2);ja=ea.getImageData(0,0,2,2);ia=ja.data;qa=document.createElement("canvas");qa.width=
qa.height=ua;la=qa.getContext("2d");la.translate(-ua/2,-ua/2);la.scale(ua,ua);ua--;this.domElement=f;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(ma,sa){b=ma;l=sa;h=b/2;g=l/2;f.width=b;f.height=l;Z.set(-h,-g,h,g);w=1;p=0;F=z=null;G=1};this.setClearColor=function(ma,sa){y.setHex(ma);C=sa;V.set(-h,-g,h,g);m.setTransform(1,0,0,-1,h,g);this.clear()};this.clear=function(){m.setTransform(1,0,0,-1,h,g);if(!V.isEmpty()){V.inflate(1);V.minSelf(Z);if(y.hex==0&&C==0)m.clearRect(V.getX(),
V.getY(),V.getWidth(),V.getHeight());else{c(THREE.NormalBlending);a(1);m.fillStyle="rgba("+Math.floor(y.r*255)+","+Math.floor(y.g*255)+","+Math.floor(y.b*255)+","+C+")";m.fillRect(V.getX(),V.getY(),V.getWidth(),V.getHeight())}V.empty()}};this.render=function(ma,sa){function Ha(M){var fa,aa,R,Y=M.lights;da.setRGB(0,0,0);ha.setRGB(0,0,0);E.setRGB(0,0,0);M=0;for(fa=Y.length;M<fa;M++){aa=Y[M];R=aa.color;if(aa instanceof THREE.AmbientLight){da.r+=R.r;da.g+=R.g;da.b+=R.b}else if(aa instanceof THREE.DirectionalLight){ha.r+=
R.r;ha.g+=R.g;ha.b+=R.b}else if(aa instanceof THREE.PointLight){E.r+=R.r;E.g+=R.g;E.b+=R.b}}}function Da(M,fa,aa,R){var Y,ga,na,oa,pa=M.lights;M=0;for(Y=pa.length;M<Y;M++){ga=pa[M];na=ga.color;oa=ga.intensity;if(ga instanceof THREE.DirectionalLight){ga=aa.dot(ga.position)*oa;if(ga>0){R.r+=na.r*ga;R.g+=na.g*ga;R.b+=na.b*ga}}else if(ga instanceof THREE.PointLight){J.sub(ga.position,fa);J.normalize();ga=aa.dot(J)*oa;if(ga>0){R.r+=na.r*ga;R.g+=na.g*ga;R.b+=na.b*ga}}}}function Qa(M,fa,aa){if(aa.opacity!=
0){a(aa.opacity);c(aa.blending);var R,Y,ga,na,oa,pa;if(aa instanceof THREE.ParticleBasicMaterial){if(aa.map&&aa.map.image.loaded){na=aa.map.image;oa=na.width>>1;pa=na.height>>1;Y=fa.scale.x*h;ga=fa.scale.y*g;aa=Y*oa;R=ga*pa;N.set(M.x-aa,M.y-R,M.x+aa,M.y+R);if(Z.instersects(N)){m.save();m.translate(M.x,M.y);m.rotate(-fa.rotation);m.scale(Y,-ga);m.translate(-oa,-pa);m.drawImage(na,0,0);m.restore()}}}else if(aa instanceof THREE.ParticleCircleMaterial){if(W){$.r=da.r+ha.r+E.r;$.g=da.g+ha.g+E.g;$.b=da.b+
ha.b+E.b;x.r=aa.color.r*$.r;x.g=aa.color.g*$.g;x.b=aa.color.b*$.b;x.updateStyleString()}else x.__styleString=aa.color.__styleString;aa=fa.scale.x*h;R=fa.scale.y*g;N.set(M.x-aa,M.y-R,M.x+aa,M.y+R);if(Z.instersects(N)){Y=x.__styleString;if(F!=Y)m.fillStyle=F=Y;m.save();m.translate(M.x,M.y);m.rotate(-fa.rotation);m.scale(aa,R);m.beginPath();m.arc(0,0,1,0,L,true);m.closePath();m.fill();m.restore()}}}}function Ra(M,fa,aa,R){if(R.opacity!=0){a(R.opacity);c(R.blending);m.beginPath();m.moveTo(M.positionScreen.x,
M.positionScreen.y);m.lineTo(fa.positionScreen.x,fa.positionScreen.y);m.closePath();if(R instanceof THREE.LineBasicMaterial){x.__styleString=R.color.__styleString;M=R.linewidth;if(G!=M)m.lineWidth=G=M;M=x.__styleString;if(z!=M)m.strokeStyle=z=M;m.stroke();N.inflate(R.linewidth*2)}}}function Ma(M,fa,aa,R,Y,ga){if(Y.opacity!=0){a(Y.opacity);c(Y.blending);k=M.positionScreen.x;o=M.positionScreen.y;q=fa.positionScreen.x;j=fa.positionScreen.y;v=aa.positionScreen.x;t=aa.positionScreen.y;m.beginPath();m.moveTo(k,
o);m.lineTo(q,j);m.lineTo(v,t);m.lineTo(k,o);m.closePath();if(Y instanceof THREE.MeshBasicMaterial)if(Y.map)Y.map.image.loaded&&Y.map.mapping instanceof THREE.UVMapping&&Aa(k,o,q,j,v,t,Y.map.image,R.uvs[0].u,R.uvs[0].v,R.uvs[1].u,R.uvs[1].v,R.uvs[2].u,R.uvs[2].v);else if(Y.env_map){if(Y.env_map.image.loaded)if(Y.env_map.mapping instanceof THREE.SphericalReflectionMapping){M=sa.matrix;J.copy(R.vertexNormalsWorld[0]);T=(J.x*M.n11+J.y*M.n12+J.z*M.n13)*0.5+0.5;U=-(J.x*M.n21+J.y*M.n22+J.z*M.n23)*0.5+0.5;
J.copy(R.vertexNormalsWorld[1]);ba=(J.x*M.n11+J.y*M.n12+J.z*M.n13)*0.5+0.5;ca=-(J.x*M.n21+J.y*M.n22+J.z*M.n23)*0.5+0.5;J.copy(R.vertexNormalsWorld[2]);S=(J.x*M.n11+J.y*M.n12+J.z*M.n13)*0.5+0.5;K=-(J.x*M.n21+J.y*M.n22+J.z*M.n23)*0.5+0.5;Aa(k,o,q,j,v,t,Y.env_map.image,T,U,ba,ca,S,K)}}else Y.wireframe?Ea(Y.color.__styleString,Y.wireframe_linewidth):Fa(Y.color.__styleString);else if(Y instanceof THREE.MeshLambertMaterial){if(Y.map&&!Y.wireframe){Y.map.mapping instanceof THREE.UVMapping&&Aa(k,o,q,j,v,
t,Y.map.image,R.uvs[0].u,R.uvs[0].v,R.uvs[1].u,R.uvs[1].v,R.uvs[2].u,R.uvs[2].v);c(THREE.SubtractiveBlending)}if(W)if(!Y.wireframe&&Y.shading==THREE.SmoothShading&&R.vertexNormalsWorld.length==3){A.r=D.r=B.r=da.r;A.g=D.g=B.g=da.g;A.b=D.b=B.b=da.b;Da(ga,R.v1.positionWorld,R.vertexNormalsWorld[0],A);Da(ga,R.v2.positionWorld,R.vertexNormalsWorld[1],D);Da(ga,R.v3.positionWorld,R.vertexNormalsWorld[2],B);I.r=(D.r+B.r)*0.5;I.g=(D.g+B.g)*0.5;I.b=(D.b+B.b)*0.5;Q=Na(A,D,B,I);Aa(k,o,q,j,v,t,Q,0,0,1,0,0,1)}else{$.r=
da.r;$.g=da.g;$.b=da.b;Da(ga,R.centroidWorld,R.normalWorld,$);x.r=Y.color.r*$.r;x.g=Y.color.g*$.g;x.b=Y.color.b*$.b;x.updateStyleString();Y.wireframe?Ea(x.__styleString,Y.wireframe_linewidth):Fa(x.__styleString)}else Y.wireframe?Ea(Y.color.__styleString,Y.wireframe_linewidth):Fa(Y.color.__styleString)}else if(Y instanceof THREE.MeshDepthMaterial){P=sa.near;O=sa.far;A.r=A.g=A.b=1-Ia(M.positionScreen.z,P,O);D.r=D.g=D.b=1-Ia(fa.positionScreen.z,P,O);B.r=B.g=B.b=1-Ia(aa.positionScreen.z,P,O);I.r=(D.r+
B.r)*0.5;I.g=(D.g+B.g)*0.5;I.b=(D.b+B.b)*0.5;Q=Na(A,D,B,I);Aa(k,o,q,j,v,t,Q,0,0,1,0,0,1)}else if(Y instanceof THREE.MeshNormalMaterial){x.r=Ja(R.normalWorld.x);x.g=Ja(R.normalWorld.y);x.b=Ja(R.normalWorld.z);x.updateStyleString();Y.wireframe?Ea(x.__styleString,Y.wireframe_linewidth):Fa(x.__styleString)}}}function Ea(M,fa){if(z!=M)m.strokeStyle=z=M;if(G!=fa)m.lineWidth=G=fa;m.stroke();N.inflate(fa*2)}function Fa(M){if(F!=M)m.fillStyle=F=M;m.fill()}function Aa(M,fa,aa,R,Y,ga,na,oa,pa,va,ra,wa,Ba){var ya,
xa;ya=na.width-1;xa=na.height-1;oa*=ya;pa*=xa;va*=ya;ra*=xa;wa*=ya;Ba*=xa;aa-=M;R-=fa;Y-=M;ga-=fa;va-=oa;ra-=pa;wa-=oa;Ba-=pa;xa=1/(va*Ba-wa*ra);ya=(Ba*aa-ra*Y)*xa;ra=(Ba*R-ra*ga)*xa;aa=(va*Y-wa*aa)*xa;R=(va*ga-wa*R)*xa;M=M-ya*oa-aa*pa;fa=fa-ra*oa-R*pa;m.save();m.transform(ya,ra,aa,R,M,fa);m.clip();m.drawImage(na,0,0);m.restore()}function Na(M,fa,aa,R){var Y=~~(M.r*255),ga=~~(M.g*255);M=~~(M.b*255);var na=~~(fa.r*255),oa=~~(fa.g*255);fa=~~(fa.b*255);var pa=~~(aa.r*255),va=~~(aa.g*255);aa=~~(aa.b*
255);var ra=~~(R.r*255),wa=~~(R.g*255);R=~~(R.b*255);ia[0]=Y<0?0:Y>255?255:Y;ia[1]=ga<0?0:ga>255?255:ga;ia[2]=M<0?0:M>255?255:M;ia[4]=na<0?0:na>255?255:na;ia[5]=oa<0?0:oa>255?255:oa;ia[6]=fa<0?0:fa>255?255:fa;ia[8]=pa<0?0:pa>255?255:pa;ia[9]=va<0?0:va>255?255:va;ia[10]=aa<0?0:aa>255?255:aa;ia[12]=ra<0?0:ra>255?255:ra;ia[13]=wa<0?0:wa>255?255:wa;ia[14]=R<0?0:R>255?255:R;ea.putImageData(ja,0,0);la.drawImage(X,0,0);return qa}function Ia(M,fa,aa){M=(M-fa)/(aa-fa);return M*M*(3-2*M)}function Ja(M){M=(M+
1)*0.5;return M<0?0:M>1?1:M}function Ka(M,fa){var aa=fa.x-M.x,R=fa.y-M.y,Y=1/Math.sqrt(aa*aa+R*R);aa*=Y;R*=Y;fa.x+=aa;fa.y+=R;M.x-=aa;M.y-=R}var Ga,Oa,ka,ta,za,La,Pa,Ca;this.autoClear?this.clear():m.setTransform(1,0,0,-1,h,g);d=e.projectScene(ma,sa,this.sortElements);(W=ma.lights.length>0)&&Ha(ma);Ga=0;for(Oa=d.length;Ga<Oa;Ga++){ka=d[Ga];N.empty();if(ka instanceof THREE.RenderableParticle){u=ka;u.x*=h;u.y*=g;ta=0;for(za=ka.materials.length;ta<za;ta++)Qa(u,ka,ka.materials[ta],ma)}else if(ka instanceof
THREE.RenderableLine){u=ka.v1;H=ka.v2;u.positionScreen.x*=h;u.positionScreen.y*=g;H.positionScreen.x*=h;H.positionScreen.y*=g;N.addPoint(u.positionScreen.x,u.positionScreen.y);N.addPoint(H.positionScreen.x,H.positionScreen.y);if(Z.instersects(N)){ta=0;for(za=ka.materials.length;ta<za;)Ra(u,H,ka,ka.materials[ta++],ma)}}else if(ka instanceof THREE.RenderableFace3){u=ka.v1;H=ka.v2;n=ka.v3;u.positionScreen.x*=h;u.positionScreen.y*=g;H.positionScreen.x*=h;H.positionScreen.y*=g;n.positionScreen.x*=h;n.positionScreen.y*=
g;if(ka.overdraw){Ka(u.positionScreen,H.positionScreen);Ka(H.positionScreen,n.positionScreen);Ka(n.positionScreen,u.positionScreen)}N.add3Points(u.positionScreen.x,u.positionScreen.y,H.positionScreen.x,H.positionScreen.y,n.positionScreen.x,n.positionScreen.y);if(Z.instersects(N)){ta=0;for(za=ka.meshMaterials.length;ta<za;){Ca=ka.meshMaterials[ta++];if(Ca instanceof THREE.MeshFaceMaterial){La=0;for(Pa=ka.faceMaterials.length;La<Pa;)(Ca=ka.faceMaterials[La++])&&Ma(u,H,n,ka,Ca,ma)}else Ma(u,H,n,ka,Ca,
ma)}}}V.addRectangle(N)}m.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(T,U,ba){var ca,S,K,Z;ca=0;for(S=T.lights.length;ca<S;ca++){K=T.lights[ca];if(K instanceof THREE.DirectionalLight){Z=U.normalWorld.dot(K.position)*K.intensity;if(Z>0){ba.r+=K.color.r*Z;ba.g+=K.color.g*Z;ba.b+=K.color.b*Z}}else if(K instanceof THREE.PointLight){t.sub(K.position,U.centroidWorld);t.normalize();Z=U.normalWorld.dot(t)*K.intensity;if(Z>0){ba.r+=K.color.r*Z;ba.g+=K.color.g*Z;ba.b+=K.color.b*Z}}}}function c(T,U,ba,ca,S,K){B=e(I++);B.setAttribute("d",
"M "+T.positionScreen.x+" "+T.positionScreen.y+" L "+U.positionScreen.x+" "+U.positionScreen.y+" L "+ba.positionScreen.x+","+ba.positionScreen.y+"z");if(S instanceof THREE.MeshBasicMaterial)n.__styleString=S.color.__styleString;else if(S instanceof THREE.MeshLambertMaterial)if(H){k.r=o.r;k.g=o.g;k.b=o.b;a(K,ca,k);n.r=S.color.r*k.r;n.g=S.color.g*k.g;n.b=S.color.b*k.b;n.updateStyleString()}else n.__styleString=S.color.__styleString;else if(S instanceof THREE.MeshDepthMaterial){v=1-S.__2near/(S.__farPlusNear-
ca.z*S.__farMinusNear);n.setRGB(v,v,v)}else S instanceof THREE.MeshNormalMaterial&&n.setRGB(f(ca.normalWorld.x),f(ca.normalWorld.y),f(ca.normalWorld.z));S.wireframe?B.setAttribute("style","fill: none; stroke: "+n.__styleString+"; stroke-width: "+S.wireframe_linewidth+"; stroke-opacity: "+S.opacity+"; stroke-linecap: "+S.wireframe_linecap+"; stroke-linejoin: "+S.wireframe_linejoin):B.setAttribute("style","fill: "+n.__styleString+"; fill-opacity: "+S.opacity);h.appendChild(B)}function d(T,U,ba,ca,S,
K,Z){B=e(I++);B.setAttribute("d","M "+T.positionScreen.x+" "+T.positionScreen.y+" L "+U.positionScreen.x+" "+U.positionScreen.y+" L "+ba.positionScreen.x+","+ba.positionScreen.y+" L "+ca.positionScreen.x+","+ca.positionScreen.y+"z");if(K instanceof THREE.MeshBasicMaterial)n.__styleString=K.color.__styleString;else if(K instanceof THREE.MeshLambertMaterial)if(H){k.r=o.r;k.g=o.g;k.b=o.b;a(Z,S,k);n.r=K.color.r*k.r;n.g=K.color.g*k.g;n.b=K.color.b*k.b;n.updateStyleString()}else n.__styleString=K.color.__styleString;
else if(K instanceof THREE.MeshDepthMaterial){v=1-K.__2near/(K.__farPlusNear-S.z*K.__farMinusNear);n.setRGB(v,v,v)}else K instanceof THREE.MeshNormalMaterial&&n.setRGB(f(S.normalWorld.x),f(S.normalWorld.y),f(S.normalWorld.z));K.wireframe?B.setAttribute("style","fill: none; stroke: "+n.__styleString+"; stroke-width: "+K.wireframe_linewidth+"; stroke-opacity: "+K.opacity+"; stroke-linecap: "+K.wireframe_linecap+"; stroke-linejoin: "+K.wireframe_linejoin):B.setAttribute("style","fill: "+n.__styleString+
"; fill-opacity: "+K.opacity);h.appendChild(B)}function e(T){if(x[T]==null){x[T]=document.createElementNS("http://www.w3.org/2000/svg","path");Q==0&&x[T].setAttribute("shape-rendering","crispEdges");return x[T]}return x[T]}function f(T){return T<0?Math.min((1+T)*0.5,0.5):0.5+Math.min(T*0.5,0.5)}var b=null,l=new THREE.Projector,h=document.createElementNS("http://www.w3.org/2000/svg","svg"),g,m,y,C,w,p,z,F,G=new THREE.Rectangle,u=new THREE.Rectangle,H=false,n=new THREE.Color(16777215),k=new THREE.Color(16777215),
o=new THREE.Color(0),q=new THREE.Color(0),j=new THREE.Color(0),v,t=new THREE.Vector3,x=[],A=[],D=[],B,I,P,O,Q=1;this.domElement=h;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(T){switch(T){case "high":Q=1;break;case "low":Q=0}};this.setSize=function(T,U){g=T;m=U;y=g/2;C=m/2;h.setAttribute("viewBox",-y+" "+-C+" "+g+" "+m);h.setAttribute("width",g);h.setAttribute("height",m);G.set(-y,-C,y,C)};this.clear=function(){for(;h.childNodes.length>0;)h.removeChild(h.childNodes[0])};
this.render=function(T,U){var ba,ca,S,K,Z,V,N,W;this.autoClear&&this.clear();b=l.projectScene(T,U,this.sortElements);O=P=I=0;if(H=T.lights.length>0){N=T.lights;o.setRGB(0,0,0);q.setRGB(0,0,0);j.setRGB(0,0,0);ba=0;for(ca=N.length;ba<ca;ba++){S=N[ba];K=S.color;if(S instanceof THREE.AmbientLight){o.r+=K.r;o.g+=K.g;o.b+=K.b}else if(S instanceof THREE.DirectionalLight){q.r+=K.r;q.g+=K.g;q.b+=K.b}else if(S instanceof THREE.PointLight){j.r+=K.r;j.g+=K.g;j.b+=K.b}}}ba=0;for(ca=b.length;ba<ca;ba++){N=b[ba];
u.empty();if(N instanceof THREE.RenderableParticle){w=N;w.x*=y;w.y*=-C;S=0;for(K=N.materials.length;S<K;S++)if(W=N.materials[S]){Z=w;V=N;W=W;var $=P++;if(A[$]==null){A[$]=document.createElementNS("http://www.w3.org/2000/svg","circle");Q==0&&A[$].setAttribute("shape-rendering","crispEdges")}B=A[$];B.setAttribute("cx",Z.x);B.setAttribute("cy",Z.y);B.setAttribute("r",V.scale.x*y);if(W instanceof THREE.ParticleCircleMaterial){if(H){k.r=o.r+q.r+j.r;k.g=o.g+q.g+j.g;k.b=o.b+q.b+j.b;n.r=W.color.r*k.r;n.g=
W.color.g*k.g;n.b=W.color.b*k.b;n.updateStyleString()}else n=W.color;B.setAttribute("style","fill: "+n.__styleString)}h.appendChild(B)}}else if(N instanceof THREE.RenderableLine){w=N.v1;p=N.v2;w.positionScreen.x*=y;w.positionScreen.y*=-C;p.positionScreen.x*=y;p.positionScreen.y*=-C;u.addPoint(w.positionScreen.x,w.positionScreen.y);u.addPoint(p.positionScreen.x,p.positionScreen.y);if(G.instersects(u)){S=0;for(K=N.materials.length;S<K;)if(W=N.materials[S++]){Z=w;V=p;W=W;$=O++;if(D[$]==null){D[$]=document.createElementNS("http://www.w3.org/2000/svg",
"line");Q==0&&D[$].setAttribute("shape-rendering","crispEdges")}B=D[$];B.setAttribute("x1",Z.positionScreen.x);B.setAttribute("y1",Z.positionScreen.y);B.setAttribute("x2",V.positionScreen.x);B.setAttribute("y2",V.positionScreen.y);if(W instanceof THREE.LineBasicMaterial){n.__styleString=W.color.__styleString;B.setAttribute("style","fill: none; stroke: "+n.__styleString+"; stroke-width: "+W.linewidth+"; stroke-opacity: "+W.opacity+"; stroke-linecap: "+W.linecap+"; stroke-linejoin: "+W.linejoin);h.appendChild(B)}}}}else if(N instanceof
THREE.RenderableFace3){w=N.v1;p=N.v2;z=N.v3;w.positionScreen.x*=y;w.positionScreen.y*=-C;p.positionScreen.x*=y;p.positionScreen.y*=-C;z.positionScreen.x*=y;z.positionScreen.y*=-C;u.addPoint(w.positionScreen.x,w.positionScreen.y);u.addPoint(p.positionScreen.x,p.positionScreen.y);u.addPoint(z.positionScreen.x,z.positionScreen.y);if(G.instersects(u)){S=0;for(K=N.meshMaterials.length;S<K;){W=N.meshMaterials[S++];if(W instanceof THREE.MeshFaceMaterial){Z=0;for(V=N.faceMaterials.length;Z<V;)(W=N.faceMaterials[Z++])&&
c(w,p,z,N,W,T)}else W&&c(w,p,z,N,W,T)}}}else if(N instanceof THREE.RenderableFace4){w=N.v1;p=N.v2;z=N.v3;F=N.v4;w.positionScreen.x*=y;w.positionScreen.y*=-C;p.positionScreen.x*=y;p.positionScreen.y*=-C;z.positionScreen.x*=y;z.positionScreen.y*=-C;F.positionScreen.x*=y;F.positionScreen.y*=-C;u.addPoint(w.positionScreen.x,w.positionScreen.y);u.addPoint(p.positionScreen.x,p.positionScreen.y);u.addPoint(z.positionScreen.x,z.positionScreen.y);u.addPoint(F.positionScreen.x,F.positionScreen.y);if(G.instersects(u)){S=
0;for(K=N.meshMaterials.length;S<K;){W=N.meshMaterials[S++];if(W instanceof THREE.MeshFaceMaterial){Z=0;for(V=N.faceMaterials.length;Z<V;)(W=N.faceMaterials[Z++])&&d(w,p,z,F,N,W,T)}else W&&d(w,p,z,F,N,W,T)}}}}}};
THREE.WebGLRenderer=function(a){function c(k,o){k.fragment_shader=o.fragment_shader;k.vertex_shader=o.vertex_shader;k.uniforms=Uniforms.clone(o.uniforms)}function d(k,o){var q;if(k=="fragment")q=b.createShader(b.FRAGMENT_SHADER);else if(k=="vertex")q=b.createShader(b.VERTEX_SHADER);b.shaderSource(q,o);b.compileShader(q);if(!b.getShaderParameter(q,b.COMPILE_STATUS)){alert(b.getShaderInfoLog(q));return null}return q}function e(k){switch(k){case THREE.RepeatWrapping:return b.REPEAT;case THREE.ClampToEdgeWrapping:return b.CLAMP_TO_EDGE;
case THREE.MirroredRepeatWrapping:return b.MIRRORED_REPEAT;case THREE.NearestFilter:return b.NEAREST;case THREE.NearestMipMapNearestFilter:return b.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return b.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return b.LINEAR;case THREE.LinearMipMapNearestFilter:return b.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return b.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return b.BYTE;case THREE.UnsignedByteType:return b.UNSIGNED_BYTE;case THREE.ShortType:return b.SHORT;
case THREE.UnsignedShortType:return b.UNSIGNED_SHORT;case THREE.IntType:return b.INT;case THREE.UnsignedShortType:return b.UNSIGNED_INT;case THREE.FloatType:return b.FLOAT;case THREE.AlphaFormat:return b.ALPHA;case THREE.RGBFormat:return b.RGB;case THREE.RGBAFormat:return b.RGBA;case THREE.LuminanceFormat:return b.LUMINANCE;case THREE.LuminanceAlphaFormat:return b.LUMINANCE_ALPHA}return 0}var f=document.createElement("canvas"),b,l=null,h=null,g=new THREE.Matrix4,m,y=new Float32Array(16),C=new Float32Array(16),
w=new Float32Array(16),p=new Float32Array(9),z=new Float32Array(16),F=new THREE.Matrix4,G=new THREE.Vector4,u=true,H=new THREE.Color(0),n=0;if(a){if(a.antialias!==undefined)u=a.antialias;a.clearColor!==undefined&&H.setHex(a.clearColor);if(a.clearAlpha!==undefined)n=a.clearAlpha}this.domElement=f;this.autoClear=true;(function(k,o,q){try{b=f.getContext("experimental-webgl",{antialias:k})}catch(j){}if(!b){alert("WebGL not supported");throw"cannot create webgl context";}b.clearColor(0,0,0,1);b.clearDepth(1);
b.enable(b.DEPTH_TEST);b.depthFunc(b.LEQUAL);b.frontFace(b.CCW);b.cullFace(b.BACK);b.enable(b.CULL_FACE);b.enable(b.BLEND);b.blendFunc(b.ONE,b.ONE_MINUS_SRC_ALPHA);b.clearColor(o.r,o.g,o.b,q)})(u,H,n);this.context=b;this.lights={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[]}};this.setSize=function(k,o){f.width=k;f.height=o;b.viewport(0,0,f.width,f.height)};this.setClearColor=function(k,o){var q=new THREE.Color(k);b.clearColor(q.r,q.g,q.b,o)};
this.clear=function(){b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT)};this.setupLights=function(k,o){var q,j,v,t=0,x=0,A=0,D,B,I,P=this.lights,O=P.directional.colors,Q=P.directional.positions,T=P.point.colors,U=P.point.positions,ba=0,ca=0;q=0;for(j=o.length;q<j;q++){v=o[q];D=v.color;B=v.position;I=v.intensity;if(v instanceof THREE.AmbientLight){t+=D.r;x+=D.g;A+=D.b}else if(v instanceof THREE.DirectionalLight){O[ba*3]=D.r*I;O[ba*3+1]=D.g*I;O[ba*3+2]=D.b*I;Q[ba*3]=B.x;Q[ba*3+1]=B.y;Q[ba*3+2]=B.z;ba+=
1}else if(v instanceof THREE.PointLight){T[ca*3]=D.r*I;T[ca*3+1]=D.g*I;T[ca*3+2]=D.b*I;U[ca*3]=B.x;U[ca*3+1]=B.y;U[ca*3+2]=B.z;ca+=1}}P.point.length=ca;P.directional.length=ba;P.ambient[0]=t;P.ambient[1]=x;P.ambient[2]=A};this.createParticleBuffers=function(k){k.__webGLVertexBuffer=b.createBuffer();k.__webGLParticleBuffer=b.createBuffer();k.__webGLColorBuffer=b.createBuffer()};this.createLineBuffers=function(k){k.__webGLVertexBuffer=b.createBuffer();k.__webGLLineBuffer=b.createBuffer()};this.createMeshBuffers=
function(k){k.__webGLVertexBuffer=b.createBuffer();k.__webGLNormalBuffer=b.createBuffer();k.__webGLTangentBuffer=b.createBuffer();k.__webGLUVBuffer=b.createBuffer();k.__webGLUV2Buffer=b.createBuffer();k.__webGLFaceBuffer=b.createBuffer();k.__webGLLineBuffer=b.createBuffer()};this.initLineBuffers=function(k){var o=k.vertices.length;k.__vertexArray=new Float32Array(o*3);k.__lineArray=new Uint16Array(o);k.__webGLLineCount=o};this.initParticleBuffers=function(k){var o=k.vertices.length;k.__vertexArray=
new Float32Array(o*3);k.__colorArray=new Float32Array(o*3);k.__particleArray=new Uint16Array(o);k.__sortArray=[];k.__webGLParticleCount=o};this.initMeshBuffers=function(k,o){var q,j,v=0,t=0,x=0,A=o.geometry.faces,D=k.faces;q=0;for(j=D.length;q<j;q++){fi=D[q];face=A[fi];if(face instanceof THREE.Face3){v+=3;t+=1;x+=3}else if(face instanceof THREE.Face4){v+=4;t+=2;x+=4}}k.__vertexArray=new Float32Array(v*3);k.__normalArray=new Float32Array(v*3);k.__tangentArray=new Float32Array(v*4);k.__uvArray=new Float32Array(v*
2);k.__uv2Array=new Float32Array(v*2);k.__faceArray=new Uint16Array(t*3);k.__lineArray=new Uint16Array(x*2);v=false;q=0;for(j=o.materials.length;q<j;q++){A=o.materials[q];if(A instanceof THREE.MeshFaceMaterial){A=0;for(D=k.materials.length;A<D;A++)if(k.materials[A]&&k.materials[A].shading!=undefined&&k.materials[A].shading==THREE.SmoothShading){v=true;break}}else if(A&&A.shading!=undefined&&A.shading==THREE.SmoothShading){v=true;break}if(v)break}k.__needsSmoothNormals=v;k.__webGLFaceCount=t*3;k.__webGLLineCount=
x*2};this.setMeshBuffers=function(k,o,q){var j,v,t,x,A,D,B,I,P,O,Q=0,T=0,U=0,ba=0,ca=0,S=0,K=0,Z=0,V=k.__vertexArray,N=k.__uvArray,W=k.__uv2Array,$=k.__normalArray,da=k.__tangentArray,ha=k.__faceArray,E=k.__lineArray,L=k.__needsSmoothNormals,J=o.geometry,X=J.__dirtyVertices,ea=J.__dirtyElements,ja=J.__dirtyUvs,ia=J.__dirtyNormals,qa=J.__dirtyTangents,la=J.vertices,ua=k.faces,ma=J.faces,sa=J.uvs,Ha=J.uvs2;o=0;for(j=ua.length;o<j;o++){v=ua[o];t=ma[v];D=sa[v];v=Ha[v];x=t.vertexNormals;A=t.normal;if(t instanceof
THREE.Face3){if(X){B=la[t.a].position;I=la[t.b].position;P=la[t.c].position;V[T]=B.x;V[T+1]=B.y;V[T+2]=B.z;V[T+3]=I.x;V[T+4]=I.y;V[T+5]=I.z;V[T+6]=P.x;V[T+7]=P.y;V[T+8]=P.z;T+=9}if(qa&&J.hasTangents){B=la[t.a].tangent;I=la[t.b].tangent;P=la[t.c].tangent;da[K]=B.x;da[K+1]=B.y;da[K+2]=B.z;da[K+3]=B.w;da[K+4]=I.x;da[K+5]=I.y;da[K+6]=I.z;da[K+7]=I.w;da[K+8]=P.x;da[K+9]=P.y;da[K+10]=P.z;da[K+11]=P.w;K+=12}if(ia)if(x.length==3&&L)for(t=0;t<3;t++){A=x[t];$[S]=A.x;$[S+1]=A.y;$[S+2]=A.z;S+=3}else for(t=0;t<
3;t++){$[S]=A.x;$[S+1]=A.y;$[S+2]=A.z;S+=3}if(ja&&D)for(t=0;t<3;t++){x=D[t];N[U]=x.u;N[U+1]=x.v;U+=2}if(ja&&v)for(t=0;t<3;t++){D=v[t];W[ba]=D.u;W[ba+1]=D.v;ba+=2}if(ea){ha[ca]=Q;ha[ca+1]=Q+1;ha[ca+2]=Q+2;ca+=3;E[Z]=Q;E[Z+1]=Q+1;E[Z+2]=Q;E[Z+3]=Q+2;E[Z+4]=Q+1;E[Z+5]=Q+2;Z+=6;Q+=3}}else if(t instanceof THREE.Face4){if(X){B=la[t.a].position;I=la[t.b].position;P=la[t.c].position;O=la[t.d].position;V[T]=B.x;V[T+1]=B.y;V[T+2]=B.z;V[T+3]=I.x;V[T+4]=I.y;V[T+5]=I.z;V[T+6]=P.x;V[T+7]=P.y;V[T+8]=P.z;V[T+9]=
O.x;V[T+10]=O.y;V[T+11]=O.z;T+=12}if(qa&&J.hasTangents){B=la[t.a].tangent;I=la[t.b].tangent;P=la[t.c].tangent;t=la[t.d].tangent;da[K]=B.x;da[K+1]=B.y;da[K+2]=B.z;da[K+3]=B.w;da[K+4]=I.x;da[K+5]=I.y;da[K+6]=I.z;da[K+7]=I.w;da[K+8]=P.x;da[K+9]=P.y;da[K+10]=P.z;da[K+11]=P.w;da[K+12]=t.x;da[K+13]=t.y;da[K+14]=t.z;da[K+15]=t.w;K+=16}if(ia)if(x.length==4&&L)for(t=0;t<4;t++){A=x[t];$[S]=A.x;$[S+1]=A.y;$[S+2]=A.z;S+=3}else for(t=0;t<4;t++){$[S]=A.x;$[S+1]=A.y;$[S+2]=A.z;S+=3}if(ja&&D)for(t=0;t<4;t++){x=D[t];
N[U]=x.u;N[U+1]=x.v;U+=2}if(ja&&v)for(t=0;t<4;t++){D=v[t];W[ba]=D.u;W[ba+1]=D.v;ba+=2}if(ea){ha[ca]=Q;ha[ca+1]=Q+1;ha[ca+2]=Q+2;ha[ca+3]=Q;ha[ca+4]=Q+2;ha[ca+5]=Q+3;ca+=6;E[Z]=Q;E[Z+1]=Q+1;E[Z+2]=Q;E[Z+3]=Q+3;E[Z+4]=Q+1;E[Z+5]=Q+2;E[Z+6]=Q+2;E[Z+7]=Q+3;Z+=8;Q+=4}}}if(X){b.bindBuffer(b.ARRAY_BUFFER,k.__webGLVertexBuffer);b.bufferData(b.ARRAY_BUFFER,V,q)}if(ia){b.bindBuffer(b.ARRAY_BUFFER,k.__webGLNormalBuffer);b.bufferData(b.ARRAY_BUFFER,$,q)}if(qa&&J.hasTangents){b.bindBuffer(b.ARRAY_BUFFER,k.__webGLTangentBuffer);
b.bufferData(b.ARRAY_BUFFER,da,q)}if(ja&&U>0){b.bindBuffer(b.ARRAY_BUFFER,k.__webGLUVBuffer);b.bufferData(b.ARRAY_BUFFER,N,q)}if(ja&&ba>0){b.bindBuffer(b.ARRAY_BUFFER,k.__webGLUV2Buffer);b.bufferData(b.ARRAY_BUFFER,W,q)}if(ea){b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,k.__webGLFaceBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,ha,q);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,k.__webGLLineBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,E,q)}};this.setLineBuffers=function(k,o){var q,j,v,t=k.vertices,x=t.length,A=k.__vertexArray,
D=k.__lineArray,B=k.__dirtyElements;if(k.__dirtyVertices){for(q=0;q<x;q++){j=t[q].position;v=q*3;A[v]=j.x;A[v+1]=j.y;A[v+2]=j.z}b.bindBuffer(b.ARRAY_BUFFER,k.__webGLVertexBuffer);b.bufferData(b.ARRAY_BUFFER,A,o)}if(B){for(q=0;q<x;q++)D[q]=q;b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,k.__webGLLineBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,D,o)}};this.setParticleBuffers=function(k,o,q,j){var v,t,x;t=k.vertices;var A=t.length,D=k.colors,B=D.length,I=k.__vertexArray,P=k.__particleArray,O=k.__colorArray,Q=k.__sortArray,
T=k.__dirtyVertices,U=k.__dirtyElements,ba=k.__dirtyColors;if(q.sortParticles){F.multiply(j.projectionMatrix,j.matrix);F.multiplySelf(q.matrix);for(v=0;v<A;v++){x=t[v].position;G.copy(x);F.multiplyVector3(G);Q[v]=[G.z,v]}Q.sort(function(ca,S){return S[0]-ca[0]});for(v=0;v<A;v++){x=t[Q[v][1]].position;j=v*3;I[j]=x.x;I[j+1]=x.y;I[j+2]=x.z}for(t=0;t<B;t++){j=t*3;color=D[Q[t][1]];O[j]=color.r;O[j+1]=color.g;O[j+2]=color.b}}else{if(T)for(v=0;v<A;v++){x=t[v].position;j=v*3;I[j]=x.x;I[j+1]=x.y;I[j+2]=x.z}if(ba)for(t=
0;t<B;t++){color=D[t];j=t*3;O[j]=color.r;O[j+1]=color.g;O[j+2]=color.b}}if(U){for(v=0;v<A;v++)P[v]=v;b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,k.__webGLParticleBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,P,o)}if(T||q.sortParticles){b.bindBuffer(b.ARRAY_BUFFER,k.__webGLVertexBuffer);b.bufferData(b.ARRAY_BUFFER,I,o)}if(ba||q.sortParticles){b.bindBuffer(b.ARRAY_BUFFER,k.__webGLColorBuffer);b.bufferData(b.ARRAY_BUFFER,O,o)}};this.initMaterial=function(k,o,q){if(!k.program){var j,v;if(k instanceof THREE.MeshDepthMaterial)c(k,
THREE.ShaderLib.depth);else if(k instanceof THREE.MeshNormalMaterial)c(k,THREE.ShaderLib.normal);else if(k instanceof THREE.MeshBasicMaterial)c(k,THREE.ShaderLib.basic);else if(k instanceof THREE.MeshLambertMaterial)c(k,THREE.ShaderLib.lambert);else if(k instanceof THREE.MeshPhongMaterial)c(k,THREE.ShaderLib.phong);else if(k instanceof THREE.LineBasicMaterial)c(k,THREE.ShaderLib.basic);else k instanceof THREE.ParticleBasicMaterial&&c(k,THREE.ShaderLib.particle_basic);var t,x,A,D;v=A=D=0;for(t=o.length;v<
t;v++){x=o[v];x instanceof THREE.DirectionalLight&&A++;x instanceof THREE.PointLight&&D++}if(D+A<=4){o=A;D=D}else{o=Math.ceil(4*A/(D+A));D=4-o}v={directional:o,point:D};D=k.fragment_shader;o=k.vertex_shader;t={fog:q,map:k.map,env_map:k.env_map,light_map:k.light_map,vertex_colors:k.vertex_colors,maxDirLights:v.directional,maxPointLights:v.point};q=b.createProgram();v=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+t.maxDirLights,"#define MAX_POINT_LIGHTS "+t.maxPointLights,
t.fog?"#define USE_FOG":"",t.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.env_map?"#define USE_ENVMAP":"",t.light_map?"#define USE_LIGHTMAP":"",t.vertex_colors?"#define USE_COLOR":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");t=[b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+t.maxDirLights,"#define MAX_POINT_LIGHTS "+t.maxPointLights,t.map?"#define USE_MAP":"",t.env_map?"#define USE_ENVMAP":
"",t.light_map?"#define USE_LIGHTMAP":"",t.vertex_colors?"#define USE_COLOR":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec3 color;\nattribute vec2 uv;\nattribute vec2 uv2;\n"].join("\n");b.attachShader(q,d("fragment",v+D));b.attachShader(q,d("vertex",t+o));b.linkProgram(q);b.getProgramParameter(q,b.LINK_STATUS)||
alert("Could not initialise shaders\nVALIDATE_STATUS: "+b.getProgramParameter(q,b.VALIDATE_STATUS)+", gl error ["+b.getError()+"]");q.uniforms={};q.attributes={};k.program=q;q=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(j in k.uniforms)q.push(j);j=k.program;D=0;for(o=q.length;D<o;D++){v=q[D];j.uniforms[v]=b.getUniformLocation(j,v)}k=k.program;j=["position","normal","uv","uv2","tangent","color"];q=0;for(D=j.length;q<D;q++){o=j[q];k.attributes[o]=
b.getAttribLocation(k,o)}}};this.renderBuffer=function(k,o,q,j,v,t){var x;this.initMaterial(j,o,q);x=j.program;if(x!=l){b.useProgram(x);l=x}this.loadCamera(x,k);this.loadMatrices(x);if(j instanceof THREE.MeshPhongMaterial||j instanceof THREE.MeshLambertMaterial){this.setupLights(x,o);o=this.lights;j.uniforms.enableLighting.value=o.directional.length+o.point.length;j.uniforms.ambientLightColor.value=o.ambient;j.uniforms.directionalLightColor.value=o.directional.colors;j.uniforms.directionalLightDirection.value=
o.directional.positions;j.uniforms.pointLightColor.value=o.point.colors;j.uniforms.pointLightPosition.value=o.point.positions}if(j instanceof THREE.MeshBasicMaterial||j instanceof THREE.MeshLambertMaterial||j instanceof THREE.MeshPhongMaterial){j.uniforms.diffuse.value.setRGB(j.color.r*j.opacity,j.color.g*j.opacity,j.color.b*j.opacity);j.uniforms.opacity.value=j.opacity;j.uniforms.map.texture=j.map;j.uniforms.light_map.texture=j.light_map;j.uniforms.env_map.texture=j.env_map;j.uniforms.reflectivity.value=
j.reflectivity;j.uniforms.refraction_ratio.value=j.refraction_ratio;j.uniforms.combine.value=j.combine;j.uniforms.useRefract.value=j.env_map&&j.env_map.mapping instanceof THREE.CubeRefractionMapping;if(q){j.uniforms.fogColor.value.setHex(q.color.hex);if(q instanceof THREE.Fog){j.uniforms.fogNear.value=q.near;j.uniforms.fogFar.value=q.far}else if(q instanceof THREE.FogExp2)j.uniforms.fogDensity.value=q.density}}if(j instanceof THREE.LineBasicMaterial){j.uniforms.diffuse.value.setRGB(j.color.r*j.opacity,
j.color.g*j.opacity,j.color.b*j.opacity);j.uniforms.opacity.value=j.opacity;if(q){j.uniforms.fogColor.value.setHex(q.color.hex);if(q instanceof THREE.Fog){j.uniforms.fogNear.value=q.near;j.uniforms.fogFar.value=q.far}else if(q instanceof THREE.FogExp2)j.uniforms.fogDensity.value=q.density}}if(j instanceof THREE.ParticleBasicMaterial){j.uniforms.psColor.value.setRGB(j.color.r*j.opacity,j.color.g*j.opacity,j.color.b*j.opacity);j.uniforms.opacity.value=j.opacity;j.uniforms.size.value=j.size;j.uniforms.map.texture=
j.map;if(q){j.uniforms.fogColor.value.setHex(q.color.hex);if(q instanceof THREE.Fog){j.uniforms.fogNear.value=q.near;j.uniforms.fogFar.value=q.far}else if(q instanceof THREE.FogExp2)j.uniforms.fogDensity.value=q.density}}if(j instanceof THREE.MeshPhongMaterial){j.uniforms.ambient.value.setRGB(j.ambient.r,j.ambient.g,j.ambient.b);j.uniforms.specular.value.setRGB(j.specular.r,j.specular.g,j.specular.b);j.uniforms.shininess.value=j.shininess}if(j instanceof THREE.MeshDepthMaterial){j.uniforms.mNear.value=
k.near;j.uniforms.mFar.value=k.far}k=j.uniforms;var A,D,B;for(A in k)if(B=x.uniforms[A]){o=k[A];D=o.type;q=o.value;if(D=="i")b.uniform1i(B,q);else if(D=="f")b.uniform1f(B,q);else if(D=="fv1")b.uniform1fv(B,q);else if(D=="fv")b.uniform3fv(B,q);else if(D=="v2")b.uniform2f(B,q.x,q.y);else if(D=="v3")b.uniform3f(B,q.x,q.y,q.z);else if(D=="c")b.uniform3f(B,q.r,q.g,q.b);else if(D=="t"){b.uniform1i(B,q);if(o=o.texture)if(o.image instanceof Array&&o.image.length==6){o=o;q=q;if(o.image.length==6){if(!o.image.__webGLTextureCube&&
!o.image.__cubeMapInitialized&&o.image.loadCount==6){o.image.__webGLTextureCube=b.createTexture();b.bindTexture(b.TEXTURE_CUBE_MAP,o.image.__webGLTextureCube);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_MAG_FILTER,b.LINEAR);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_MIN_FILTER,b.LINEAR_MIPMAP_LINEAR);for(D=0;D<6;++D)b.texImage2D(b.TEXTURE_CUBE_MAP_POSITIVE_X+
D,0,b.RGBA,b.RGBA,b.UNSIGNED_BYTE,o.image[D]);b.generateMipmap(b.TEXTURE_CUBE_MAP);b.bindTexture(b.TEXTURE_CUBE_MAP,null);o.image.__cubeMapInitialized=true}b.activeTexture(b.TEXTURE0+q);b.bindTexture(b.TEXTURE_CUBE_MAP,o.image.__webGLTextureCube)}}else{o=o;q=q;if(!o.__webGLTexture&&o.image.loaded){o.__webGLTexture=b.createTexture();b.bindTexture(b.TEXTURE_2D,o.__webGLTexture);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,b.RGBA,b.UNSIGNED_BYTE,o.image);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,e(o.wrap_s));
b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,e(o.wrap_t));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,e(o.mag_filter));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,e(o.min_filter));b.generateMipmap(b.TEXTURE_2D);b.bindTexture(b.TEXTURE_2D,null)}b.activeTexture(b.TEXTURE0+q);b.bindTexture(b.TEXTURE_2D,o.__webGLTexture)}}}x=x.attributes;b.bindBuffer(b.ARRAY_BUFFER,v.__webGLVertexBuffer);b.vertexAttribPointer(x.position,3,b.FLOAT,false,0,0);b.enableVertexAttribArray(x.position);if(x.color>=
0){b.bindBuffer(b.ARRAY_BUFFER,v.__webGLColorBuffer);b.vertexAttribPointer(x.color,3,b.FLOAT,false,0,0);b.enableVertexAttribArray(x.color)}if(x.normal>=0){b.bindBuffer(b.ARRAY_BUFFER,v.__webGLNormalBuffer);b.vertexAttribPointer(x.normal,3,b.FLOAT,false,0,0);b.enableVertexAttribArray(x.normal)}if(x.tangent>=0){b.bindBuffer(b.ARRAY_BUFFER,v.__webGLTangentBuffer);b.vertexAttribPointer(x.tangent,4,b.FLOAT,false,0,0);b.enableVertexAttribArray(x.tangent)}if(x.uv>=0)if(v.__webGLUVBuffer){b.bindBuffer(b.ARRAY_BUFFER,
v.__webGLUVBuffer);b.vertexAttribPointer(x.uv,2,b.FLOAT,false,0,0);b.enableVertexAttribArray(x.uv)}else b.disableVertexAttribArray(x.uv);if(x.uv2>=0)if(v.__webGLUV2Buffer){b.bindBuffer(b.ARRAY_BUFFER,v.__webGLUV2Buffer);b.vertexAttribPointer(x.uv2,2,b.FLOAT,false,0,0);b.enableVertexAttribArray(x.uv2)}else b.disableVertexAttribArray(x.uv2);if(j.wireframe||j instanceof THREE.LineBasicMaterial){x=j.wireframe_linewidth!==undefined?j.wireframe_linewidth:j.linewidth!==undefined?j.linewidth:1;j=j instanceof
THREE.LineBasicMaterial&&t.type==THREE.LineStrip?b.LINE_STRIP:b.LINES;b.lineWidth(x);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,v.__webGLLineBuffer);b.drawElements(j,v.__webGLLineCount,b.UNSIGNED_SHORT,0)}else if(j instanceof THREE.ParticleBasicMaterial){b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,v.__webGLParticleBuffer);b.drawElements(b.POINTS,v.__webGLParticleCount,b.UNSIGNED_SHORT,0)}else{b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,v.__webGLFaceBuffer);b.drawElements(b.TRIANGLES,v.__webGLFaceCount,b.UNSIGNED_SHORT,
0)}};this.renderPass=function(k,o,q,j,v,t,x){var A,D,B,I,P;B=0;for(I=j.materials.length;B<I;B++){A=j.materials[B];if(A instanceof THREE.MeshFaceMaterial){A=0;for(D=v.materials.length;A<D;A++)if((P=v.materials[A])&&P.blending==t&&P.opacity<1==x){this.setBlending(P.blending);this.renderBuffer(k,o,q,P,v,j)}}else if((P=A)&&P.blending==t&&P.opacity<1==x){this.setBlending(P.blending);this.renderBuffer(k,o,q,P,v,j)}}};this.render=function(k,o,q,j){var v,t,x,A=k.lights,D=k.fog;o.autoUpdateMatrix&&o.updateMatrix();
y.set(o.matrix.flatten());w.set(o.projectionMatrix.flatten());this.initWebGLObjects(k,o);j=j!==undefined?j:true;if(q&&!q.__webGLFramebuffer){q.__webGLFramebuffer=b.createFramebuffer();q.__webGLRenderbuffer=b.createRenderbuffer();q.__webGLTexture=b.createTexture();b.bindRenderbuffer(b.RENDERBUFFER,q.__webGLRenderbuffer);b.renderbufferStorage(b.RENDERBUFFER,b.DEPTH_COMPONENT16,q.width,q.height);b.bindTexture(b.TEXTURE_2D,q.__webGLTexture);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,e(q.wrap_s));b.texParameteri(b.TEXTURE_2D,
b.TEXTURE_WRAP_T,e(q.wrap_t));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,e(q.mag_filter));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,e(q.min_filter));b.texImage2D(b.TEXTURE_2D,0,e(q.format),q.width,q.height,0,e(q.format),e(q.type),null);b.bindFramebuffer(b.FRAMEBUFFER,q.__webGLFramebuffer);b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,q.__webGLTexture,0);b.framebufferRenderbuffer(b.FRAMEBUFFER,b.DEPTH_ATTACHMENT,b.RENDERBUFFER,q.__webGLRenderbuffer);b.bindTexture(b.TEXTURE_2D,
null);b.bindRenderbuffer(b.RENDERBUFFER,null);b.bindFramebuffer(b.FRAMEBUFFER,null)}if(q){v=q.__webGLFramebuffer;x=q.width;t=q.height}else{v=null;x=f.width;t=f.height}if(v!=h){b.bindFramebuffer(b.FRAMEBUFFER,v);b.viewport(0,0,x,t);j&&b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT);h=v}this.autoClear&&this.clear();v=k.__webGLObjects.length;for(j=0;j<v;j++){t=k.__webGLObjects[j];x=t.object;if(x.visible){x.autoUpdateMatrix&&x.updateMatrix();if(x.doubleSided)b.disable(b.CULL_FACE);else{b.enable(b.CULL_FACE);
x.flipSided?b.frontFace(b.CW):b.frontFace(b.CCW)}}}for(j=0;j<v;j++){t=k.__webGLObjects[j];x=t.object;t=t.buffer;if(x.visible){this.setupMatrices(x,o);this.renderPass(o,A,D,x,t,THREE.NormalBlending,false)}}for(j=0;j<v;j++){t=k.__webGLObjects[j];x=t.object;t=t.buffer;if(x.visible){this.setupMatrices(x,o);this.renderPass(o,A,D,x,t,THREE.AdditiveBlending,false);this.renderPass(o,A,D,x,t,THREE.SubtractiveBlending,false);this.renderPass(o,A,D,x,t,THREE.AdditiveBlending,true);this.renderPass(o,A,D,x,t,THREE.SubtractiveBlending,
true);this.renderPass(o,A,D,x,t,THREE.NormalBlending,true);this.renderPass(o,A,D,x,t,THREE.BillboardBlending,false)}}if(q&&q.min_filter!==THREE.NearestFilter&&q.min_filter!==THREE.LinearFilter){b.bindTexture(b.TEXTURE_2D,q.__webGLTexture);b.generateMipmap(b.TEXTURE_2D);b.bindTexture(b.TEXTURE_2D,null)}};this.initWebGLObjects=function(k,o){function q(I,P,O,Q){if(I[P]==undefined){k.__webGLObjects.push({buffer:O,object:Q});I[P]=1}}var j,v,t,x,A,D,B;if(!k.__webGLObjects){k.__webGLObjects=[];k.__webGLObjectsMap=
{}}j=0;for(v=k.objects.length;j<v;j++){t=k.objects[j];A=t.geometry;if(k.__webGLObjectsMap[t.id]==undefined)k.__webGLObjectsMap[t.id]={};B=k.__webGLObjectsMap[t.id];if(t instanceof THREE.Mesh){for(x in A.geometryChunks){D=A.geometryChunks[x];if(!D.__webGLVertexBuffer){this.createMeshBuffers(D);this.initMeshBuffers(D,t);A.__dirtyVertices=true;A.__dirtyElements=true;A.__dirtyUvs=true;A.__dirtyNormals=true;A.__dirtyTangents=true}if(A.__dirtyVertices||A.__dirtyElements||A.__dirtyUvs)this.setMeshBuffers(D,
t,b.DYNAMIC_DRAW);q(B,x,D,t)}A.__dirtyVertices=false;A.__dirtyElements=false;A.__dirtyUvs=false;A.__dirtyNormals=false;A.__dirtyTangents=false}else if(t instanceof THREE.Line){if(!A.__webGLVertexBuffer){this.createLineBuffers(A);this.initLineBuffers(A);A.__dirtyVertices=true;A.__dirtyElements=true}A.__dirtyVertices&&this.setLineBuffers(A,b.DYNAMIC_DRAW);q(B,0,A,t);A.__dirtyVertices=false;A.__dirtyElements=false}else if(t instanceof THREE.ParticleSystem){if(!A.__webGLVertexBuffer){this.createParticleBuffers(A);
this.initParticleBuffers(A);A.__dirtyVertices=true;A.__dirtyColors=true;A.__dirtyElements=true}if(A.__dirtyVertices||A.__dirtyColors||t.sortParticles)this.setParticleBuffers(A,b.DYNAMIC_DRAW,t,o);q(B,0,A,t);A.__dirtyVertices=false;A.__dirtyColors=false;A.__dirtyElements=false}}};this.removeObject=function(k,o){var q,j;for(q=k.__webGLObjects.length-1;q>=0;q--){j=k.__webGLObjects[q].object;o==j&&k.__webGLObjects.splice(q,1)}};this.setupMatrices=function(k,o){g.multiply(o.matrix,k.matrix);C.set(g.flatten());
m=THREE.Matrix4.makeInvert3x3(g).transpose();p.set(m.m);z.set(k.matrix.flatten())};this.loadMatrices=function(k){b.uniformMatrix4fv(k.uniforms.viewMatrix,false,y);b.uniformMatrix4fv(k.uniforms.modelViewMatrix,false,C);b.uniformMatrix4fv(k.uniforms.projectionMatrix,false,w);b.uniformMatrix3fv(k.uniforms.normalMatrix,false,p);b.uniformMatrix4fv(k.uniforms.objectMatrix,false,z)};this.loadCamera=function(k,o){b.uniform3f(k.uniforms.cameraPosition,o.position.x,o.position.y,o.position.z)};this.setBlending=
function(k){switch(k){case THREE.AdditiveBlending:b.blendEquation(b.FUNC_ADD);b.blendFunc(b.ONE,b.ONE);break;case THREE.SubtractiveBlending:b.blendFunc(b.DST_COLOR,b.ZERO);break;case THREE.BillboardBlending:b.blendEquation(b.FUNC_ADD);b.blendFunc(b.SRC_ALPHA,b.ONE_MINUS_SRC_ALPHA);break;default:b.blendEquation(b.FUNC_ADD);b.blendFunc(b.ONE,b.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=function(k,o){if(k){!o||o=="ccw"?b.frontFace(b.CCW):b.frontFace(b.CW);if(k=="back")b.cullFace(b.BACK);else k=="front"?
b.cullFace(b.FRONT):b.cullFace(b.FRONT_AND_BACK);b.enable(b.CULL_FACE)}else b.disable(b.CULL_FACE)};this.supportsVertexTextures=function(){return b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\ncubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = mix( gl_FragColor, cubeColor, reflectivity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\nmapColor = texture2D( map, gl_PointCoord );\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif",map_fragment:"#ifdef USE_MAP\nmapColor = texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D light_map;\n#endif",
lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\nlightmapColor = texture2D( light_map, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( transformedNormal, pointLightVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting;\n#ifdef PHONG\nvPointLightVector[ i ] = pointLightVector;\n#endif\n}\n#endif\n}",
lights_pars_fragment:"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 mSpecular = vec4( specular, opacity );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0 );\nvec4 pointSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec3 pointVector = normalize( vPointLightVector[ i ] );\nvec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, shininess );\npointDiffuse  += mColor * pointDiffuseWeight;\npointSpecular += mSpecular * pointSpecularWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0 );\nvec4 dirSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, shininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = vec4( ambient, opacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\nvertexColor = vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\nvColor = color;\n#endif"};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},light_map:{type:"t",value:2,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",
value:1},ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), 1.0 );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{},fragment_shader:"varying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );\n}",
vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:THREE.UniformsLib.common,fragment_shader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.Snippets.map_pars_fragment,THREE.Snippets.lightmap_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( diffuse, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 lightmapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",
THREE.Snippets.map_fragment,THREE.Snippets.lightmap_fragment,"gl_FragColor = mColor * mapColor * lightmapColor;",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:[THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,THREE.Snippets.envmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,THREE.Snippets.envmap_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},
lambert:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights]),fragment_shader:["uniform vec3 diffuse;\nuniform float opacity;\nvarying vec3 vLightWeighting;",THREE.Snippets.map_pars_fragment,THREE.Snippets.lightmap_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( diffuse, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 lightmapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,
THREE.Snippets.lightmap_fragment,"gl_FragColor =  mColor * mapColor * lightmapColor * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["varying vec3 vLightWeighting;",THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,
THREE.Snippets.envmap_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},phong:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights,{ambient:{type:"c",value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),fragment_shader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;\nvarying vec3 vLightWeighting;",
THREE.Snippets.map_pars_fragment,THREE.Snippets.lightmap_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,THREE.Snippets.lights_pars_fragment,"void main() {\nvec4 mColor = vec4( diffuse, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 lightmapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,THREE.Snippets.lights_fragment,THREE.Snippets.lightmap_fragment,"gl_FragColor =  mapColor * lightmapColor * totalLight * vec4( vLightWeighting, 1.0 );",
THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["#define PHONG\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,THREE.Snippets.envmap_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 transformedNormal = normalize( normalMatrix * normal );\nvNormal = transformedNormal;",
THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},particle_basic:{uniforms:THREE.UniformsLib.particle,fragment_shader:["uniform vec3 psColor;\nuniform float opacity;",THREE.Snippets.color_pars_fragment,THREE.Snippets.map_particle_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( psColor, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 vertexColor = vec4( 1.0 );",THREE.Snippets.map_particle_fragment,THREE.Snippets.color_fragment,
"gl_FragColor = mColor * mapColor * vertexColor;",THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["uniform float size;",THREE.Snippets.color_pars_vertex,"void main() {",THREE.Snippets.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\ngl_PointSize = size;\n}"].join("\n")}};THREE.RenderableObject=function(){this.z=this.object=null};
THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};
THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
var GeometryUtils={merge:function(a,c){var d=c instanceof THREE.Mesh,e=a.vertices.length,f=d?c.geometry:c,b=a.vertices,l=f.vertices,h=a.faces,g=f.faces,m=a.uvs;f=f.uvs;d&&c.autoUpdateMatrix&&c.updateMatrix();for(var y=0,C=l.length;y<C;y++){var w=new THREE.Vertex(l[y].position.clone());d&&c.matrix.multiplyVector3(w.position);b.push(w)}y=0;for(C=g.length;y<C;y++){l=g[y];var p,z=l.vertexNormals;if(l instanceof THREE.Face3)p=new THREE.Face3(l.a+e,l.b+e,l.c+e);else if(l instanceof THREE.Face4)p=new THREE.Face4(l.a+
e,l.b+e,l.c+e,l.d+e);p.centroid.copy(l.centroid);p.normal.copy(l.normal);d=0;for(b=z.length;d<b;d++){w=z[d];p.vertexNormals.push(w.clone())}p.materials=l.materials.slice();h.push(p)}y=0;for(C=f.length;y<C;y++){e=f[y];h=[];d=0;for(b=e.length;d<b;d++)h.push(new THREE.UV(e[d].u,e[d].v));m.push(h)}}},ImageUtils={loadTexture:function(a,c,d){var e=new Image;e.onload=function(){this.loaded=true;d&&d(this)};e.src=a;return new THREE.Texture(e,c)},loadArray:function(a,c){var d,e,f=[];d=f.loadCount=0;for(e=
a.length;d<e;++d){f[d]=new Image;f[d].loaded=0;f[d].onload=function(){f.loadCount+=1;this.loaded=true;c&&c(this)};f[d].src=a[d]}return f}},SceneUtils={loadScene:function(a,c,d,e){a=new Worker(a);a.postMessage(0);a.onmessage=function(f){function b(){for(y in j.objects)if(!B.objects[y]){F=j.objects[y];if(n=B.geometries[F.geometry]){q=[];for(i=0;i<F.materials.length;i++)q[i]=B.materials[F.materials[i]];G=F.position;r=F.rotation;s=F.scale;object=new THREE.Mesh(n,q);object.position.set(G[0],G[1],G[2]);
object.rotation.set(r[0],r[1],r[2]);object.scale.set(s[0],s[1],s[2]);object.visible=F.visible;B.scene.addObject(object);B.objects[y]=object}}}function l(I){return function(P){B.geometries[I]=P;b();t-=1;h()}}function h(){e({total_models:A,total_textures:D,loaded_models:A-t,loaded_textures:D-x},B);t==0&&x==0&&d(B)}var g,m,y,C,w,p,z,F,G,u,H,n,k,o,q,j,v,t,x,A,D,B;j=f.data;v=new THREE.Loader;x=t=0;B={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{}};
f=function(){x-=1;h()};for(w in j.cameras){u=j.cameras[w];if(u.type=="perspective")k=new THREE.Camera(u.fov,u.aspect,u.near,u.far);else if(u.type=="ortho"){k=new THREE.Camera;k.projectionMatrix=THREE.Matrix4.makeOrtho(u.left,u.right,u.top,u.bottom,u.near,u.far)}G=u.position;u=u.target;k.position.set(G[0],G[1],G[2]);k.target.position.set(u[0],u[1],u[2]);B.cameras[w]=k}for(C in j.lights){w=j.lights[C];if(w.type=="directional"){G=w.direction;light=new THREE.DirectionalLight;light.position.set(G[0],G[1],
G[2]);light.position.normalize()}else if(w.type=="point"){G=w.position;light=new THREE.PointLight;light.position.set(G[0],G[1],G[2])}u=w.color;i=w.intensity||1;light.color.setRGB(u[0]*i,u[1]*i,u[2]*i);B.scene.addLight(light);B.lights[C]=light}for(p in j.fogs){C=j.fogs[p];if(C.type=="linear")o=new THREE.Fog(0,C.near,C.far);else if(C.type=="exp2")o=new THREE.FogExp2(0,C.density);u=C.color;o.color.setRGB(u[0],u[1],u[2]);B.fogs[p]=o}if(B.cameras&&j.defaults.camera)B.currentCamera=B.cameras[j.defaults.camera];
if(B.fogs&&j.defaults.fog)B.scene.fog=B.fogs[j.defaults.fog];u=j.defaults.bgcolor;B.bgColor=new THREE.Color;B.bgColor.setRGB(u[0],u[1],u[2]);B.bgColorAlpha=j.defaults.bgalpha;for(g in j.geometries){p=j.geometries[g];if(p.type=="bin_mesh"||p.type=="ascii_mesh")t+=1}A=t;for(g in j.geometries){p=j.geometries[g];if(p.type=="cube"){n=new Cube(p.width,p.height,p.depth,p.segments_width,p.segments_height,null,p.flipped,p.sides);B.geometries[g]=n}else if(p.type=="plane"){n=new Plane(p.width,p.height,p.segments_width,
p.segments_height);B.geometries[g]=n}else if(p.type=="sphere"){n=new Sphere(p.radius,p.segments_width,p.segments_height);B.geometries[g]=n}else if(p.type=="cylinder"){n=new Cylinder(p.numSegs,p.topRad,p.botRad,p.height,p.topOffset,p.botOffset);B.geometries[g]=n}else if(p.type=="torus"){n=new Torus(p.radius,p.tube,p.segmentsR,p.segmentsT);B.geometries[g]=n}else if(p.type=="icosahedron"){n=new Icosahedron(p.subdivisions);B.geometries[g]=n}else if(p.type=="bin_mesh")v.loadBinary({model:p.url,callback:l(g)});
else p.type=="ascii_mesh"&&v.loadAscii({model:p.url,callback:l(g)})}for(z in j.textures){g=j.textures[z];x+=g.url instanceof Array?g.url.length:1}D=x;for(z in j.textures){g=j.textures[z];if(g.mapping!=undefined&&THREE[g.mapping]!=undefined)g.mapping=new THREE[g.mapping];if(g.url instanceof Array){p=ImageUtils.loadArray(g.url,f);p=new THREE.Texture(p,g.mapping)}else{p=ImageUtils.loadTexture(g.url,g.mapping,f);if(THREE[g.min_filter]!=undefined)p.min_filter=THREE[g.min_filter];if(THREE[g.mag_filter]!=
undefined)p.mag_filter=THREE[g.mag_filter]}B.textures[z]=p}for(m in j.materials){z=j.materials[m];for(H in z.parameters)if(H=="env_map"||H=="map"||H=="light_map")z.parameters[H]=B.textures[z.parameters[H]];else if(H=="shading")z.parameters[H]=z.parameters[H]=="flat"?THREE.FlatShading:THREE.SmoothShading;else if(H=="blending")z.parameters[H]=THREE[z.parameters[H]]?THREE[z.parameters[H]]:THREE.NormalBlending;else if(H=="combine")z.parameters[H]=z.parameters[H]=="MixOperation"?THREE.MixOperation:THREE.MultiplyOperation;
z=new THREE[z.type](z.parameters);B.materials[m]=z}b();c(B)}},addMesh:function(a,c,d,e,f,b,l,h,g,m){c=new THREE.Mesh(c,m);c.scale.x=c.scale.y=c.scale.z=d;c.position.x=e;c.position.y=f;c.position.z=b;c.rotation.x=l;c.rotation.y=h;c.rotation.z=g;a.addObject(c);return c},addPanoramaCubeWebGL:function(a,c,d){var e=ShaderUtils.lib.cube;e.uniforms.tCube.texture=d;d=new THREE.MeshShaderMaterial({fragment_shader:e.fragment_shader,vertex_shader:e.vertex_shader,uniforms:e.uniforms});c=new THREE.Mesh(new Cube(c,
c,c,1,1,null,true),d);a.addObject(c);return c},addPanoramaCube:function(a,c,d){var e=[];e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[0])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[1])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[2])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[3])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[4])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[5])}));c=new THREE.Mesh(new Cube(c,
c,c,1,1,e,true),new THREE.MeshFaceMaterial);a.addObject(c);return c},addPanoramaCubePlanes:function(a,c,d){var e=c/2;c=new Plane(c,c);var f=Math.PI/2,b=Math.PI;SceneUtils.addMesh(a,c,1,0,0,-e,0,0,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[5])}));SceneUtils.addMesh(a,c,1,-e,0,0,0,f,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[0])}));SceneUtils.addMesh(a,c,1,e,0,0,0,-f,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[1])}));SceneUtils.addMesh(a,c,1,0,e,0,f,0,b,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[2])}));
SceneUtils.addMesh(a,c,1,0,-e,0,-f,0,b,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[3])}))}},ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertex_shader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tNormal:{type:"t",value:2,texture:null},tAO:{type:"t",value:3,texture:null},uNormalScale:{type:"f",value:1},tDisplacement:{type:"t",value:4,texture:null},uDisplacementBias:{type:"f",value:-0.5},uDisplacementScale:{type:"f",value:2.5},uPointLightPos:{type:"v3",value:new THREE.Vector3},uPointLightColor:{type:"c",value:new THREE.Color(15658734)},uDirLightPos:{type:"v3",value:new THREE.Vector3},
uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30}},fragment_shader:"uniform vec3 uDirLightPos;\nuniform vec3 uAmbientLightColor;\nuniform vec3 uDirLightColor;\nuniform vec3 uPointLightColor;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform bool enableDiffuse;\nuniform bool enableAO;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tAO;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 diffuseTex = vec3( 1.0, 1.0, 1.0 );\nvec3 aoTex = vec3( 1.0, 1.0, 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse )\ndiffuseTex = texture2D( tDiffuse, vUv ).xyz;\nif( enableAO )\naoTex = texture2D( tAO, vUv ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec3 pointVector = normalize( vPointLightVector );\nvec3 pointHalfVector = normalize( vPointLightVector + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, uShininess );\npointDiffuse  += vec4( uDiffuseColor, 1.0 ) * pointDiffuseWeight;\npointSpecular += vec4( uSpecularColor, 1.0 ) * pointSpecularWeight;\nvec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 lDirection = viewMatrix * vec4( uDirLightPos, 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, uShininess );\ndirDiffuse  += vec4( uDiffuseColor, 1.0 ) * dirDiffuseWeight;\ndirSpecular += vec4( uSpecularColor, 1.0 ) * dirSpecularWeight;\nvec4 totalLight = vec4( uAmbientLightColor * uAmbientColor, 1.0 );\ntotalLight += vec4( uDirLightColor, 1.0 ) * ( dirDiffuse + dirSpecular );\ntotalLight += vec4( uPointLightColor, 1.0 ) * ( pointDiffuse + pointSpecular );\ngl_FragColor = vec4( totalLight.xyz * aoTex * diffuseTex, 1.0 );\n}",
vertex_shader:"attribute vec4 tangent;\nuniform vec3 uPointLightPos;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec4 lPosition = viewMatrix * vec4( uPointLightPos, 1.0 );\nvPointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}"},
cube:{uniforms:{tCube:{type:"t",value:1,texture:null}},vertex_shader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( - wPos.x, wPos.yz ) );\n}"},convolution:{uniforms:{tDiffuse:{type:"t",
value:0,texture:null},uImageIncrement:{type:"v2",value:new THREE.Vector2(0.001953125,0)},cKernel:{type:"fv1",value:[]}},vertex_shader:"varying vec2 vUv;\nuniform vec2 uImageIncrement;\nvoid main(void) {\nvUv = uv - ((KERNEL_SIZE - 1.0) / 2.0) * uImageIncrement;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"varying vec2 vUv;\nuniform sampler2D tDiffuse;\nuniform vec2 uImageIncrement;\nuniform float cKernel[KERNEL_SIZE];\nvoid main(void) {\nvec2 imageCoord = vUv;\nvec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\nfor( int i=0; i<KERNEL_SIZE; ++i ) {\nsum += texture2D( tDiffuse, imageCoord ) * cKernel[i];\nimageCoord += uImageIncrement;\n}\ngl_FragColor = sum;\n}"},
film:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},time:{type:"f",value:0}},vertex_shader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"varying vec2 vUv;\nuniform sampler2D tDiffuse;\nuniform float time;\nconst float fNintensity = 0.35;\nconst float fSintensity = 0.35;\nconst float fScount = 4096.0;\nvoid main() {\nvec4 cTextureScreen = texture2D( tDiffuse, vUv );\nfloat x = vUv.x * vUv.y * time *  1000.0;\nx = mod( x, 13.0 ) * mod( x, 123.0 );\nfloat dx = mod( x, 0.01 );\nvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\nvec2 sc = vec2( sin(vUv.y * fScount), cos(vUv.y * fScount) );\ncResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * fSintensity;\ncResult = cTextureScreen.rgb + clamp( fNintensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\ncResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\ngl_FragColor =  vec4( cResult, cTextureScreen.a );\n}"},
screen:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},opacity:{type:"f",value:1}},vertex_shader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"varying vec2 vUv;\nuniform sampler2D tDiffuse;\nuniform float opacity;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\ngl_FragColor = opacity * texel;\n}"},basic:{uniforms:{},vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
fragment_shader:"void main() {\ngl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );\n}"}},buildKernel:function(a){var c,d,e,f,b=2*Math.ceil(a*3)+1;if(b>25)b=25;f=(b-1)*0.5;d=Array(b);for(c=e=0;c<b;++c){d[c]=Math.exp(-((c-f)*(c-f))/(2*a*a));e+=d[c]}for(c=0;c<b;++c)d[c]/=e;return d}},Cube=function(a,c,d,e,f,b,l,h){function g(F,G,u,H,n,k,o,q){var j,v,t=e||1,x=f||1,A=t+1,D=x+1,B=n/2,I=k/2;n=n/t;var P=k/x,O=m.vertices.length;if(F=="x"&&G=="y"||F=="y"&&G=="x")j="z";else if(F=="x"&&G=="z"||F=="z"&&G=="x")j="y";else if(F==
"z"&&G=="y"||F=="y"&&G=="z")j="x";for(v=0;v<D;v++)for(k=0;k<A;k++){var Q=new THREE.Vector3;Q[F]=(k*n-B)*u;Q[G]=(v*P-I)*H;Q[j]=o;m.vertices.push(new THREE.Vertex(Q))}for(v=0;v<x;v++)for(k=0;k<t;k++){m.faces.push(new THREE.Face4(k+A*v+O,k+A*(v+1)+O,k+1+A*(v+1)+O,k+1+A*v+O,null,q));m.uvs.push([new THREE.UV(k/t,v/x),new THREE.UV(k/t,(v+1)/x),new THREE.UV((k+1)/t,(v+1)/x),new THREE.UV((k+1)/t,v/x)])}}THREE.Geometry.call(this);var m=this,y=a/2,C=c/2,w=d/2;l=l?-1:1;if(b!==undefined)if(b instanceof Array)this.materials=
b;else{this.materials=[];for(var p=0;p<6;p++)this.materials.push([b])}else this.materials=[];this.sides={px:true,nx:true,py:true,ny:true,pz:true,nz:true};if(h!=undefined)for(var z in h)if(this.sides[z]!=undefined)this.sides[z]=h[z];this.sides.px&&g("z","y",1*l,-1,d,c,-y,this.materials[0]);this.sides.nx&&g("z","y",-1*l,-1,d,c,y,this.materials[1]);this.sides.py&&g("x","z",1*l,1,a,d,C,this.materials[2]);this.sides.ny&&g("x","z",1*l,-1,a,d,-C,this.materials[3]);this.sides.pz&&g("x","y",1*l,-1,a,c,w,this.materials[4]);
this.sides.nz&&g("x","y",-1*l,-1,a,c,-w,this.materials[5]);(function(){for(var F=[],G=[],u=0,H=m.vertices.length;u<H;u++){for(var n=m.vertices[u],k=false,o=0,q=F.length;o<q;o++){var j=F[o];if(n.position.x==j.position.x&&n.position.y==j.position.y&&n.position.z==j.position.z){G[u]=o;k=true;break}}if(!k){G[u]=F.length;F.push(new THREE.Vertex(n.position.clone()))}}u=0;for(H=m.faces.length;u<H;u++){n=m.faces[u];n.a=G[n.a];n.b=G[n.b];n.c=G[n.c];n.d=G[n.d]}m.vertices=F})();this.computeCentroids();this.computeFaceNormals();
this.sortFacesByMaterial()};Cube.prototype=new THREE.Geometry;Cube.prototype.constructor=Cube;
var Cylinder=function(a,c,d,e,f){function b(m,y,C){l.vertices.push(new THREE.Vertex(new THREE.Vector3(m,y,C)))}THREE.Geometry.call(this);var l=this,h=Math.PI,g;for(g=0;g<a;g++)b(Math.sin(2*h*g/a)*c,Math.cos(2*h*g/a)*c,0);for(g=0;g<a;g++)b(Math.sin(2*h*g/a)*d,Math.cos(2*h*g/a)*d,e);for(g=0;g<a;g++)l.faces.push(new THREE.Face4(g,g+a,a+(g+1)%a,(g+1)%a));if(d!=0){b(0,0,-f);for(g=a;g<a+a/2;g++)l.faces.push(new THREE.Face4(2*a,(2*g-2*a)%a,(2*g-2*a+1)%a,(2*g-2*a+2)%a))}if(c!=0){b(0,0,e+f);for(g=a+a/2;g<
2*a;g++)l.faces.push(new THREE.Face4((2*g-2*a+2)%a+a,(2*g-2*a+1)%a+a,(2*g-2*a)%a+a,2*a+1))}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cylinder.prototype=new THREE.Geometry;Cylinder.prototype.constructor=Cylinder;
var Plane=function(a,c,d,e){THREE.Geometry.call(this);var f,b=a/2,l=c/2;d=d||1;e=e||1;var h=d+1,g=e+1;a=a/d;var m=c/e;for(f=0;f<g;f++)for(c=0;c<h;c++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(c*a-b,-(f*m-l),0)));for(f=0;f<e;f++)for(c=0;c<d;c++){this.faces.push(new THREE.Face4(c+h*f,c+h*(f+1),c+1+h*(f+1),c+1+h*f));this.uvs.push([new THREE.UV(c/d,f/e),new THREE.UV(c/d,(f+1)/e),new THREE.UV((c+1)/d,(f+1)/e),new THREE.UV((c+1)/d,f/e)])}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};
Plane.prototype=new THREE.Geometry;Plane.prototype.constructor=Plane;
var Sphere=function(a,c,d){THREE.Geometry.call(this);var e,f=Math.PI,b=Math.max(3,c||8),l=Math.max(2,d||6);c=[];for(d=0;d<l+1;d++){e=d/l;var h=a*Math.cos(e*f),g=a*Math.sin(e*f),m=[],y=0;for(e=0;e<b;e++){var C=2*e/b,w=g*Math.sin(C*f);C=g*Math.cos(C*f);(d==0||d==l)&&e>0||(y=this.vertices.push(new THREE.Vertex(new THREE.Vector3(C,h,w)))-1);m.push(y)}c.push(m)}var p,z,F;f=c.length;for(d=0;d<f;d++){b=c[d].length;if(d>0)for(e=0;e<b;e++){m=e==b-1;l=c[d][m?0:e+1];h=c[d][m?b-1:e];g=c[d-1][m?b-1:e];m=c[d-1][m?
0:e+1];w=d/(f-1);p=(d-1)/(f-1);z=(e+1)/b;C=e/b;y=new THREE.UV(1-z,w);w=new THREE.UV(1-C,w);C=new THREE.UV(1-C,p);var G=new THREE.UV(1-z,p);if(d<c.length-1){p=this.vertices[l].position.clone();z=this.vertices[h].position.clone();F=this.vertices[g].position.clone();p.normalize();z.normalize();F.normalize();this.faces.push(new THREE.Face3(l,h,g,[new THREE.Vector3(p.x,p.y,p.z),new THREE.Vector3(z.x,z.y,z.z),new THREE.Vector3(F.x,F.y,F.z)]));this.uvs.push([y,w,C])}if(d>1){p=this.vertices[l].position.clone();
z=this.vertices[g].position.clone();F=this.vertices[m].position.clone();p.normalize();z.normalize();F.normalize();this.faces.push(new THREE.Face3(l,g,m,[new THREE.Vector3(p.x,p.y,p.z),new THREE.Vector3(z.x,z.y,z.z),new THREE.Vector3(F.x,F.y,F.z)]));this.uvs.push([y,C,G])}}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial();this.boundingSphere={radius:a}};Sphere.prototype=new THREE.Geometry;Sphere.prototype.constructor=Sphere;
var Torus=function(a,c,d,e){this.radius=a||100;this.tube=c||40;this.segmentsR=d||8;this.segmentsT=e||6;a=[];THREE.Geometry.call(this);for(c=0;c<=this.segmentsR;++c)for(d=0;d<=this.segmentsT;++d){e=d/this.segmentsT*2*Math.PI;var f=c/this.segmentsR*2*Math.PI;this.vertices.push(new THREE.Vertex(new THREE.Vector3((this.radius+this.tube*Math.cos(f))*Math.cos(e),(this.radius+this.tube*Math.cos(f))*Math.sin(e),this.tube*Math.sin(f))));a.push([d/this.segmentsT,1-c/this.segmentsR])}for(c=1;c<=this.segmentsR;++c)for(d=
1;d<=this.segmentsT;++d){e=(this.segmentsT+1)*c+d;f=(this.segmentsT+1)*c+d-1;var b=(this.segmentsT+1)*(c-1)+d-1,l=(this.segmentsT+1)*(c-1)+d;this.faces.push(new THREE.Face4(e,f,b,l));this.uvs.push([new THREE.UV(a[e][0],a[e][1]),new THREE.UV(a[f][0],a[f][1]),new THREE.UV(a[b][0],a[b][1]),new THREE.UV(a[l][0],a[l][1])])}delete a;this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()};Torus.prototype=new THREE.Geometry;Torus.prototype.constructor=Torus;
var Icosahedron=function(a){function c(C,w,p){var z=Math.sqrt(C*C+w*w+p*p);return f.vertices.push(new THREE.Vertex(new THREE.Vector3(C/z,w/z,p/z)))-1}function d(C,w,p,z){z.faces.push(new THREE.Face3(C,w,p))}function e(C,w){var p=f.vertices[C].position,z=f.vertices[w].position;return c((p.x+z.x)/2,(p.y+z.y)/2,(p.z+z.z)/2)}var f=this,b=new THREE.Geometry,l;this.subdivisions=a||0;THREE.Geometry.call(this);a=(1+Math.sqrt(5))/2;c(-1,a,0);c(1,a,0);c(-1,-a,0);c(1,-a,0);c(0,-1,a);c(0,1,a);c(0,-1,-a);c(0,
1,-a);c(a,0,-1);c(a,0,1);c(-a,0,-1);c(-a,0,1);d(0,11,5,b);d(0,5,1,b);d(0,1,7,b);d(0,7,10,b);d(0,10,11,b);d(1,5,9,b);d(5,11,4,b);d(11,10,2,b);d(10,7,6,b);d(7,1,8,b);d(3,9,4,b);d(3,4,2,b);d(3,2,6,b);d(3,6,8,b);d(3,8,9,b);d(4,9,5,b);d(2,4,11,b);d(6,2,10,b);d(8,6,7,b);d(9,8,1,b);for(a=0;a<this.subdivisions;a++){l=new THREE.Geometry;for(var h in b.faces){var g=e(b.faces[h].a,b.faces[h].b),m=e(b.faces[h].b,b.faces[h].c),y=e(b.faces[h].c,b.faces[h].a);d(b.faces[h].a,g,y,l);d(b.faces[h].b,m,g,l);d(b.faces[h].c,
y,m,l);d(g,m,y,l)}b.faces=l.faces}f.faces=b.faces;delete b;delete l;this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()};Icosahedron.prototype=new THREE.Geometry;Icosahedron.prototype.constructor=Icosahedron;
function LathedObject(a,c,d){THREE.Geometry.call(this);c=c||12;d=d||2*Math.PI;c=d/c;for(var e=[],f=[],b=[],l=[],h=0;h<a.length;h++){this.vertices.push(new THREE.Vertex(a[h]));f[h]=this.vertices.length-1;e[h]=new THREE.Vector3(a[h].x,a[h].y,a[h].z)}for(var g=THREE.Matrix4.rotationZMatrix(c),m=0;m<=d+0.0010;m+=c){for(h=0;h<e.length;h++)if(m<d){e[h]=g.multiplyVector3(e[h].clone());this.vertices.push(new THREE.Vertex(e[h]));b[h]=this.vertices.length-1}else b=l;if(m==0)l=f;for(h=0;h<f.length-1;h++){this.faces.push(new THREE.Face4(b[h],
b[h+1],f[h+1],f[h]));this.uvs.push([new THREE.UV(m/d,h/a.length),new THREE.UV(m/d,(h+1)/a.length),new THREE.UV((m-c)/d,(h+1)/a.length),new THREE.UV((m-c)/d,h/a.length)])}f=b;b=[]}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()}LathedObject.prototype=new THREE.Geometry;LathedObject.prototype.constructor=LathedObject;THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?this.addStatusElement():null};
THREE.Loader.prototype={addStatusElement:function(){var a=document.createElement("div");a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="#b00";a.style.color="#fff";a.style.width="140px";a.style.padding="0.25em 0.25em 0.25em 0.5em";a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var c="Loaded ";c+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1E3).toFixed(2)+" KB";this.statusDomElement.innerHTML=
c},loadAsciiOld:function(a,c){var d=document.createElement("script");d.type="text/javascript";d.onload=c;d.src=a;document.getElementsByTagName("head")[0].appendChild(d)},loadAscii:function(a){var c=a.model,d=a.callback,e=a.texture_path?a.texture_path:THREE.Loader.prototype.extractUrlbase(c);a=(new Date).getTime();c=new Worker(c);c.onmessage=function(f){THREE.Loader.prototype.createModel(f.data,d,e)};c.postMessage(a)},loadBinary:function(a){var c=a.model,d=a.callback,e=a.texture_path?a.texture_path:
THREE.Loader.prototype.extractUrlbase(c),f=a.bin_path?a.bin_path:THREE.Loader.prototype.extractUrlbase(c);a=(new Date).getTime();c=new Worker(c);var b=this.showProgress?THREE.Loader.prototype.updateProgress:null;c.onmessage=function(l){THREE.Loader.prototype.loadAjaxBuffers(l.data.buffers,l.data.materials,d,f,e,b)};c.onerror=function(l){alert("worker.onerror: "+l.message+"\n"+l.data);l.preventDefault()};c.postMessage(a)},loadAjaxBuffers:function(a,c,d,e,f,b){var l=new XMLHttpRequest,h=e+"/"+a,g=0;
l.onreadystatechange=function(){if(l.readyState==4)l.status==200||l.status==0?THREE.Loader.prototype.createBinModel(l.responseText,d,f,c):alert("Couldn't load ["+h+"] ["+l.status+"]");else if(l.readyState==3){if(b){if(g==0)g=l.getResponseHeader("Content-Length");b({total:g,loaded:l.responseText.length})}}else if(l.readyState==2)g=l.getResponseHeader("Content-Length")};l.open("GET",h,true);l.overrideMimeType("text/plain; charset=x-user-defined");l.setRequestHeader("Content-Type","text/plain");l.send(null)},
createBinModel:function(a,c,d,e){var f=function(b){function l(E,L){var J=y(E,L),X=y(E,L+1),ea=y(E,L+2),ja=y(E,L+3),ia=(ja<<1&255|ea>>7)-127;J=(ea&127)<<16|X<<8|J;if(J==0&&ia==-127)return 0;return(1-2*(ja>>7))*(1+J*Math.pow(2,-23))*Math.pow(2,ia)}function h(E,L){var J=y(E,L),X=y(E,L+1),ea=y(E,L+2);return(y(E,L+3)<<24)+(ea<<16)+(X<<8)+J}function g(E,L){var J=y(E,L);return(y(E,L+1)<<8)+J}function m(E,L){var J=y(E,L);return J>127?J-256:J}function y(E,L){return E.charCodeAt(L)&255}function C(E){var L,
J,X;L=h(a,E);J=h(a,E+q);X=h(a,E+j);E=g(a,E+v);THREE.Loader.prototype.f3(u,L,J,X,E)}function w(E){var L,J,X,ea,ja,ia;L=h(a,E);J=h(a,E+q);X=h(a,E+j);ea=g(a,E+v);ja=h(a,E+t);ia=h(a,E+x);E=h(a,E+A);THREE.Loader.prototype.f3n(u,k,L,J,X,ea,ja,ia,E)}function p(E){var L,J,X,ea;L=h(a,E);J=h(a,E+D);X=h(a,E+B);ea=h(a,E+I);E=g(a,E+P);THREE.Loader.prototype.f4(u,L,J,X,ea,E)}function z(E){var L,J,X,ea,ja,ia,qa,la;L=h(a,E);J=h(a,E+D);X=h(a,E+B);ea=h(a,E+I);ja=g(a,E+P);ia=h(a,E+O);qa=h(a,E+Q);la=h(a,E+T);E=h(a,E+
U);THREE.Loader.prototype.f4n(u,k,L,J,X,ea,ja,ia,qa,la,E)}function F(E){var L,J;L=h(a,E);J=h(a,E+ba);E=h(a,E+ca);THREE.Loader.prototype.uv3(u.uvs,o[L*2],o[L*2+1],o[J*2],o[J*2+1],o[E*2],o[E*2+1])}function G(E){var L,J,X;L=h(a,E);J=h(a,E+S);X=h(a,E+K);E=h(a,E+Z);THREE.Loader.prototype.uv4(u.uvs,o[L*2],o[L*2+1],o[J*2],o[J*2+1],o[X*2],o[X*2+1],o[E*2],o[E*2+1])}var u=this,H=0,n,k=[],o=[],q,j,v,t,x,A,D,B,I,P,O,Q,T,U,ba,ca,S,K,Z,V,N,W,$,da,ha;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(u,
e,b);n={signature:a.substr(H,8),header_bytes:y(a,H+8),vertex_coordinate_bytes:y(a,H+9),normal_coordinate_bytes:y(a,H+10),uv_coordinate_bytes:y(a,H+11),vertex_index_bytes:y(a,H+12),normal_index_bytes:y(a,H+13),uv_index_bytes:y(a,H+14),material_index_bytes:y(a,H+15),nvertices:h(a,H+16),nnormals:h(a,H+16+4),nuvs:h(a,H+16+8),ntri_flat:h(a,H+16+12),ntri_smooth:h(a,H+16+16),ntri_flat_uv:h(a,H+16+20),ntri_smooth_uv:h(a,H+16+24),nquad_flat:h(a,H+16+28),nquad_smooth:h(a,H+16+32),nquad_flat_uv:h(a,H+16+36),
nquad_smooth_uv:h(a,H+16+40)};H+=n.header_bytes;q=n.vertex_index_bytes;j=n.vertex_index_bytes*2;v=n.vertex_index_bytes*3;t=n.vertex_index_bytes*3+n.material_index_bytes;x=n.vertex_index_bytes*3+n.material_index_bytes+n.normal_index_bytes;A=n.vertex_index_bytes*3+n.material_index_bytes+n.normal_index_bytes*2;D=n.vertex_index_bytes;B=n.vertex_index_bytes*2;I=n.vertex_index_bytes*3;P=n.vertex_index_bytes*4;O=n.vertex_index_bytes*4+n.material_index_bytes;Q=n.vertex_index_bytes*4+n.material_index_bytes+
n.normal_index_bytes;T=n.vertex_index_bytes*4+n.material_index_bytes+n.normal_index_bytes*2;U=n.vertex_index_bytes*4+n.material_index_bytes+n.normal_index_bytes*3;ba=n.uv_index_bytes;ca=n.uv_index_bytes*2;S=n.uv_index_bytes;K=n.uv_index_bytes*2;Z=n.uv_index_bytes*3;b=n.vertex_index_bytes*3+n.material_index_bytes;ha=n.vertex_index_bytes*4+n.material_index_bytes;V=n.ntri_flat*b;N=n.ntri_smooth*(b+n.normal_index_bytes*3);W=n.ntri_flat_uv*(b+n.uv_index_bytes*3);$=n.ntri_smooth_uv*(b+n.normal_index_bytes*
3+n.uv_index_bytes*3);da=n.nquad_flat*ha;b=n.nquad_smooth*(ha+n.normal_index_bytes*4);ha=n.nquad_flat_uv*(ha+n.uv_index_bytes*4);H+=function(E){var L,J,X,ea=n.vertex_coordinate_bytes*3,ja=E+n.nvertices*ea;for(E=E;E<ja;E+=ea){L=l(a,E);J=l(a,E+n.vertex_coordinate_bytes);X=l(a,E+n.vertex_coordinate_bytes*2);THREE.Loader.prototype.v(u,L,J,X)}return n.nvertices*ea}(H);H+=function(E){var L,J,X,ea=n.normal_coordinate_bytes*3,ja=E+n.nnormals*ea;for(E=E;E<ja;E+=ea){L=m(a,E);J=m(a,E+n.normal_coordinate_bytes);
X=m(a,E+n.normal_coordinate_bytes*2);k.push(L/127,J/127,X/127)}return n.nnormals*ea}(H);H+=function(E){var L,J,X=n.uv_coordinate_bytes*2,ea=E+n.nuvs*X;for(E=E;E<ea;E+=X){L=l(a,E);J=l(a,E+n.uv_coordinate_bytes);o.push(L,J)}return n.nuvs*X}(H);H=H;V=H+V;N=V+N;W=N+W;$=W+$;da=$+da;b=da+b;ha=b+ha;(function(E){var L,J=n.vertex_index_bytes*3+n.material_index_bytes,X=J+n.uv_index_bytes*3,ea=E+n.ntri_flat_uv*X;for(L=E;L<ea;L+=X){C(L);F(L+J)}return ea-E})(N);(function(E){var L,J=n.vertex_index_bytes*3+n.material_index_bytes+
n.normal_index_bytes*3,X=J+n.uv_index_bytes*3,ea=E+n.ntri_smooth_uv*X;for(L=E;L<ea;L+=X){w(L);F(L+J)}return ea-E})(W);(function(E){var L,J=n.vertex_index_bytes*4+n.material_index_bytes,X=J+n.uv_index_bytes*4,ea=E+n.nquad_flat_uv*X;for(L=E;L<ea;L+=X){p(L);G(L+J)}return ea-E})(b);(function(E){var L,J=n.vertex_index_bytes*4+n.material_index_bytes+n.normal_index_bytes*4,X=J+n.uv_index_bytes*4,ea=E+n.nquad_smooth_uv*X;for(L=E;L<ea;L+=X){z(L);G(L+J)}return ea-E})(ha);(function(E){var L,J=n.vertex_index_bytes*
3+n.material_index_bytes,X=E+n.ntri_flat*J;for(L=E;L<X;L+=J)C(L);return X-E})(H);(function(E){var L,J=n.vertex_index_bytes*3+n.material_index_bytes+n.normal_index_bytes*3,X=E+n.ntri_smooth*J;for(L=E;L<X;L+=J)w(L);return X-E})(V);(function(E){var L,J=n.vertex_index_bytes*4+n.material_index_bytes,X=E+n.nquad_flat*J;for(L=E;L<X;L+=J)p(L);return X-E})($);(function(E){var L,J=n.vertex_index_bytes*4+n.material_index_bytes+n.normal_index_bytes*4,X=E+n.nquad_smooth*J;for(L=E;L<X;L+=J)z(L);return X-E})(da);
this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};f.prototype=new THREE.Geometry;f.prototype.constructor=f;c(new f(d))},createModel:function(a,c,d){var e=function(f){var b=this;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(b,a.materials,f);(function(){var l,h,g,m,y;l=0;for(h=a.vertices.length;l<h;l+=3){g=a.vertices[l];m=a.vertices[l+1];y=a.vertices[l+2];THREE.Loader.prototype.v(b,g,m,y)}})();(function(){function l(z,F){THREE.Loader.prototype.f3(b,z[F],
z[F+1],z[F+2],z[F+3])}function h(z,F){THREE.Loader.prototype.f3n(b,a.normals,z[F],z[F+1],z[F+2],z[F+3],z[F+4],z[F+5],z[F+6])}function g(z,F){THREE.Loader.prototype.f4(b,z[F],z[F+1],z[F+2],z[F+3],z[F+4])}function m(z,F){THREE.Loader.prototype.f4n(b,a.normals,z[F],z[F+1],z[F+2],z[F+3],z[F+4],z[F+5],z[F+6],z[F+7],z[F+8])}function y(z,F){var G,u,H,n,k,o,q,j,v;G=z[F];u=z[F+1];H=z[F+2];n=a.uvs[G*2];q=a.uvs[G*2+1];k=a.uvs[u*2];j=a.uvs[u*2+1];o=a.uvs[H*2];v=a.uvs[H*2+1];THREE.Loader.prototype.uv3(b.uvs,n,
q,k,j,o,v);if(a.uvs2){n=a.uvs2[G*2];q=a.uvs2[G*2+1];k=a.uvs2[u*2];j=a.uvs2[u*2+1];o=a.uvs2[H*2];v=a.uvs2[H*2+1];THREE.Loader.prototype.uv3(b.uvs2,n,1-q,k,1-j,o,1-v)}}function C(z,F){var G,u,H,n,k,o,q,j,v,t,x,A;G=z[F];u=z[F+1];H=z[F+2];n=z[F+3];k=a.uvs[G*2];v=a.uvs[G*2+1];o=a.uvs[u*2];t=a.uvs[u*2+1];q=a.uvs[H*2];x=a.uvs[H*2+1];j=a.uvs[n*2];A=a.uvs[n*2+1];THREE.Loader.prototype.uv4(b.uvs,k,v,o,t,q,x,j,A);if(a.uvs2){k=a.uvs2[G*2];v=a.uvs2[G*2+1];o=a.uvs2[u*2];t=a.uvs2[u*2+1];q=a.uvs2[H*2];x=a.uvs2[H*
2+1];j=a.uvs2[n*2];A=a.uvs2[n*2+1];THREE.Loader.prototype.uv4(b.uvs2,k,1-v,o,1-t,q,1-x,j,1-A)}}var w,p;w=0;for(p=a.triangles_uv.length;w<p;w+=7){l(a.triangles_uv,w);y(a.triangles_uv,w+4)}w=0;for(p=a.triangles_n_uv.length;w<p;w+=10){h(a.triangles_n_uv,w);y(a.triangles_n_uv,w+7)}w=0;for(p=a.quads_uv.length;w<p;w+=9){g(a.quads_uv,w);C(a.quads_uv,w+5)}w=0;for(p=a.quads_n_uv.length;w<p;w+=13){m(a.quads_n_uv,w);C(a.quads_n_uv,w+9)}w=0;for(p=a.triangles.length;w<p;w+=4)l(a.triangles,w);w=0;for(p=a.triangles_n.length;w<
p;w+=7)h(a.triangles_n,w);w=0;for(p=a.quads.length;w<p;w+=5)g(a.quads,w);w=0;for(p=a.quads_n.length;w<p;w+=9)m(a.quads_n,w)})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};e.prototype=new THREE.Geometry;e.prototype.constructor=e;c(new e(d))},v:function(a,c,d,e){a.vertices.push(new THREE.Vertex(new THREE.Vector3(c,d,e)))},f3:function(a,c,d,e,f){a.faces.push(new THREE.Face3(c,d,e,null,a.materials[f]))},f4:function(a,c,d,e,f,b){a.faces.push(new THREE.Face4(c,d,e,f,null,
a.materials[b]))},f3n:function(a,c,d,e,f,b,l,h,g){b=a.materials[b];var m=c[h*3],y=c[h*3+1];h=c[h*3+2];var C=c[g*3],w=c[g*3+1];g=c[g*3+2];a.faces.push(new THREE.Face3(d,e,f,[new THREE.Vector3(c[l*3],c[l*3+1],c[l*3+2]),new THREE.Vector3(m,y,h),new THREE.Vector3(C,w,g)],b))},f4n:function(a,c,d,e,f,b,l,h,g,m,y){l=a.materials[l];var C=c[g*3],w=c[g*3+1];g=c[g*3+2];var p=c[m*3],z=c[m*3+1];m=c[m*3+2];var F=c[y*3],G=c[y*3+1];y=c[y*3+2];a.faces.push(new THREE.Face4(d,e,f,b,[new THREE.Vector3(c[h*3],c[h*3+1],
c[h*3+2]),new THREE.Vector3(C,w,g),new THREE.Vector3(p,z,m),new THREE.Vector3(F,G,y)],l))},uv3:function(a,c,d,e,f,b,l){var h=[];h.push(new THREE.UV(c,d));h.push(new THREE.UV(e,f));h.push(new THREE.UV(b,l));a.push(h)},uv4:function(a,c,d,e,f,b,l,h,g){var m=[];m.push(new THREE.UV(c,d));m.push(new THREE.UV(e,f));m.push(new THREE.UV(b,l));m.push(new THREE.UV(h,g));a.push(m)},init_materials:function(a,c,d){a.materials=[];for(var e=0;e<c.length;++e)a.materials[e]=[THREE.Loader.prototype.createMaterial(c[e],
d)]},createMaterial:function(a,c){function d(l){l=Math.log(l)/Math.LN2;return Math.floor(l)==l}function e(l,h){var g=new Image;g.onload=function(){if(!d(this.width)||!d(this.height)){var m=Math.pow(2,Math.round(Math.log(this.width)/Math.LN2)),y=Math.pow(2,Math.round(Math.log(this.height)/Math.LN2));l.image.width=m;l.image.height=y;l.image.getContext("2d").drawImage(this,0,0,m,y)}else l.image=this;l.image.loaded=1};g.src=h}var f,b;if(a.map_diffuse&&c){b=document.createElement("canvas");f=new THREE.MeshLambertMaterial({map:new THREE.Texture(b)});
e(f.map,c+"/"+a.map_diffuse)}else if(a.col_diffuse){f=(a.col_diffuse[0]*255<<16)+(a.col_diffuse[1]*255<<8)+a.col_diffuse[2]*255;f=new THREE.MeshLambertMaterial({color:f,opacity:a.transparency})}else f=a.a_dbg_color?new THREE.MeshLambertMaterial({color:a.a_dbg_color}):new THREE.MeshLambertMaterial({color:15658734});if(a.map_lightmap&&c){b=document.createElement("canvas");f.light_map=new THREE.Texture(b);e(f.light_map,c+"/"+a.map_lightmap)}return f},extractUrlbase:function(a){a=a.split("/");a.pop();
return a.join("/")}};
